{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/zfb.jpg","path":"images/zfb.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/mm.jpg","path":"images/mm.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1488985946000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1488985946000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1488985946000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1488985946000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1488985946000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1488985946000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1488985946000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1488985946000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1488985946000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1488985946000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1488985946000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1488985946000},{"_id":"themes/next/_config.yml","hash":"3be3b9c6a90d2f7da1bee46e072035c032445f3b","modified":1488992791000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1488985946000},{"_id":"themes/next/gulpfile.coffee","hash":"933e6d29eb82522cff0df209d52b935e91b1111c","modified":1488985946000},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1488985946000},{"_id":"source/_posts/cleverboysusegoodnotebook.md","hash":"2076de667e65c56acc3a67c064bb8137d4cd9ba5","modified":1489076329000},{"_id":"source/_posts/findandawk.md","hash":"bb3f68559a99e834b666e8797258612ffb63fe9f","modified":1488293307000},{"_id":"source/_posts/hello-world.md","hash":"177a1aa623b8efd4a073b3589fada4d0ccb3282d","modified":1489017035000},{"_id":"source/_posts/hello.md","hash":"18e4c079bf7e02c4fd940824713e77114d52110e","modified":1488294032000},{"_id":"source/_posts/iterator.md","hash":"d2763146f3106549fbe895e59a5b36f5e3e22f78","modified":1488979872000},{"_id":"source/_posts/test.md","hash":"781b9fd3afa05876b8d712082be91efeede8de08","modified":1487958966000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1488985946000},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1488985946000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1488985724000},{"_id":"themes/next/.git/index","hash":"e8aec6df0bd528fe69139cac2cbd33fcf29f4c53","modified":1488985946000},{"_id":"themes/next/.git/packed-refs","hash":"547f7c5e2791e36cc09c2444d3a4a65fe5468d12","modified":1488985946000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1488985946000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1488985946000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1488985946000},{"_id":"themes/next/languages/default.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1488985946000},{"_id":"themes/next/languages/en.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1488985946000},{"_id":"themes/next/languages/fr-FR.yml","hash":"e98f1558347752a20019b71f0b1f9c8be1b34f42","modified":1488985946000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1488985946000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1488985946000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1488985946000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1488985946000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1488985946000},{"_id":"themes/next/languages/ru.yml","hash":"5022885d8955e1b91d8841048db272bf99c59a76","modified":1488985946000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"40d01dc46d57f71c2ef635c45b295d4355456e90","modified":1488985946000},{"_id":"themes/next/languages/zh-hk.yml","hash":"19c23d21f262e24c06ee6ddfd51d2a6585304f88","modified":1488985946000},{"_id":"themes/next/languages/zh-tw.yml","hash":"68407799271c78ecc07f03d238257dd8c65ad42d","modified":1488985946000},{"_id":"themes/next/languages/zh.yml","hash":"40d01dc46d57f71c2ef635c45b295d4355456e90","modified":1488989930000},{"_id":"themes/next/layout/_layout.swig","hash":"2c0c3547a5b470024326a33ae2779d5ee0252266","modified":1488985946000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1488985946000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1488985946000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1488985946000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1488985946000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1488985946000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1488985946000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1488985946000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1488985946000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1488985946000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1488985946000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1488985946000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1488985946000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1488985724000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1488985724000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1488985724000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1488985724000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1488985724000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1488985724000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1488985724000},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1488985724000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1488985724000},{"_id":"themes/next/.git/logs/HEAD","hash":"1d07f9a2e699c79e45e9ea44dd1c7bc1ff561d29","modified":1488985946000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1488985946000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1488985946000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1488985946000},{"_id":"themes/next/layout/_macro/post.swig","hash":"2c2efe44ea013030f3ce5da7bfdeddb74489eb6e","modified":1488985946000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1488985946000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1488985946000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1488985946000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"970aa668680896262b1056bb5787fc9ec8754495","modified":1488985946000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1488985946000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1488985946000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1488985946000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1488985946000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1488985946000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1488985946000},{"_id":"themes/next/layout/_partials/search.swig","hash":"7b61e96508df70152b809ea5354236ab7f0d54f4","modified":1488985946000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1488985946000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1488985946000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1488985946000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1488985946000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1488985946000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1488985946000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"79378f3a1cd90518b07808ed09156a3ab55ffa31","modified":1488985946000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1488985946000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1488985946000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1488985946000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1488985724000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1488985946000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1488985946000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1488985946000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1488985946000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1488985946000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1488985946000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1488985946000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1488985946000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1488985946000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1488985946000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488985946000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488985946000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1488985946000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1488985946000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1488985946000},{"_id":"themes/next/source/images/zfb.jpg","hash":"a56542f0428978ff7a91bd10591fb8354a827044","modified":1488992366000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488985946000},{"_id":"themes/next/.git/refs/heads/master","hash":"8e263f0e3c466c2948b5c2b1e849c404b26898af","modified":1488985946000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1488985946000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1488985946000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1488985946000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1488985946000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1488985946000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1488985946000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1488985946000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1488985946000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1488985946000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1488985946000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1488985946000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1488985946000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1488985946000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1488985946000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1488985946000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1488985946000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1488985946000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1488985946000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"74a4f177e56dba5371571baf1962d52325d94440","modified":1488989457000},{"_id":"themes/next/source/images/mm.jpg","hash":"22fc9bbbe8c2413c20c1abe99c11e7c3b40d8406","modified":1488992361000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1488985946000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1488985946000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1488985946000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1488985946000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1488985946000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1488985946000},{"_id":"themes/next/source/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1488985946000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1488985946000},{"_id":"themes/next/source/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1488985946000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1488985946000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1488985946000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1488985946000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1488985946000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1488985946000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1488985946000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1488985946000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1488985946000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1488985946000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1488985946000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1488985946000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1488985946000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1488985946000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1488985946000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1488985946000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1488985946000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1488985946000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1488985946000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1488985946000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"1d07f9a2e699c79e45e9ea44dd1c7bc1ff561d29","modified":1488985946000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1488985946000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1488985946000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1488985946000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1488985946000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1488985946000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1488985946000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1488985946000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"f15537cee1a9ef4fa1e72a1670ebce4097db8115","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1488985946000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1488985946000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1488985946000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1488985946000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1488985946000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1488985946000},{"_id":"themes/next/.git/objects/pack/pack-a95573b69ce446566225c894464cba61f7e57293.idx","hash":"3903b3385c6affbb99188c8f10c2f0794fcd7a05","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1488985946000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1488985946000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"1d07f9a2e699c79e45e9ea44dd1c7bc1ff561d29","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"755b04edbbfbdd981a783edb09c9cc34cb79cea7","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8fe1e55bc290e6aaf07cc644fe27b62107a272a8","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1488985946000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1488985946000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1488985946000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1488985946000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1488985946000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1488985946000},{"_id":"themes/next/.git/objects/pack/pack-a95573b69ce446566225c894464cba61f7e57293.pack","hash":"3e3ac201472e4a0454af57a6dddf7ee59436b224","modified":1488985946000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"find awk 和 grep 使用总结","date":"2017-02-23T15:57:54.000Z","_content":"find awk 和 grep 使用总结\n使用linux工作经常会用到find这个工具去查找文件，找到的文件可以通过awk进行操作，也可以配合grep\n一起操作，这三个工具一起使用基本上可以高效的完成linux下百分之九十的文本处理工作，今天主要记录一下这三个\n工具的使用方法。\n<!--more-->\n## find\n如果我什么参数也不给，find会打印出当前目录下所有的文件和目录名\n``` bash\nfind\n.\n./_posts\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n```\n这里有几个默认的参数\n1. 默认查找的目录为当前目录\n1. 默认查找匹配所有记录\n1. 默认打印输出匹配到的记录-print\n上面的这个find与下面的find输出一致\n\n``` bash\nfind  ./ -print -name \"*\"\n./\n./-name\n./_posts\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n```\n-print0可以去掉换行\n``` bash\nfind  ./ -print0 -name \"*\"\n././-name./_posts./_posts/hello-world.md./_posts/findandawk.md./_posts/test.md\n```\n-printf 可以格式化输出\n```bash\nfind . -type f -printf \" %Tc %p\\n\"\n Mon 27 Feb 2017 08:54:40 PM CST ./-name\n Mon 27 Feb 2017 12:31:29 AM CST ./_posts/hello-world.md\n Mon 27 Feb 2017 09:01:12 PM CST ./_posts/findandawk.md\n Sat 25 Feb 2017 01:56:06 AM CST ./_posts/test.md\n```\n格式化输出的参数有很多这里不一一列举具体可以参考手册 man find 看更多printf的相关内容\n当然输出不是find的主要功能，find 主要还是查找功能。\nfind 可以按照文件名称，文件类型，权限权限，访问时间等等多种维度去查找,但是我们一般使用最多的是按照文件名称来查找的\n```bash\n按文件名查找\nfind ./ -name \"*.md\"\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n按文件类型查找\nfind ./ -type f -name \"*.md\"\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n\n一天以前的文件\nfind ./ -mtime +1\n```\nfind还有一个exec的参数可以对找到的文件执行相应的操作，但是这个有一定的危险如果你执行的动作是\n删除的话请慎重使用，但是rm在-exec里出现的使用频率往往很高\n```bash\n用ls列出找到的文件\n./ -mtime +1 -exec ls -l {} \\;\n-rw-rw-r--. 1 fangqing fangqing 5456 Feb 25 01:56 ./_posts/test.md\n强制删除当前目录下所有日志，这个动作很危险，要注意检查防止误操作\nfind ./ -name \"*.log\"  -exec rm -f {} \\;\n```\nfind的用法和参数实在是太多，有些高级技巧在需要的时候我就查一下手册，上面find的这些查找参数可以满足日常百分之九十的查找工作。\n# awk\nawk是一门脚本语言，awk是三位作者名字的首字母，关于awk起源的内容不写了。\nawk是linux下文本处理的瑞士军刀，你可以通过awk把字符串按照你想要的格式进行切分、合并、拼接、转换\n甚至算术运算。\n首先需要记录一下awk的几个内置变量\n```bash\nawk\n    ARGC        参数数量\n    ARGIND      当前处理文件在ARGV中的索引\n    ARGV        命令行参数数组\n    FILENAME    当前处理文件的文件名\n    FS          输入字段的分割符\n    NF          记录字段数量.\n    NR          当前输入的记录数量.\n    OFMT        数字输出格式, 默认为\"%.6g\".\n    OFS         输出字段分隔符.\n    ORS         输出记录分割符.\n    RS          输入记录分割符号.\n```\n这几个变量对awk处理文本有很大影响基本常用就是这几个变量下面记录几个案例\n```bash\n./ -print -name \"*\" -exec ls -l {} \\; |awk '{print $NF}'\n./\n-name\n_posts\n./-name\n./-name\n./_posts\nfindandawk.md\nhello-world.md\ntest.md\n./_posts/hello-world.md\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/findandawk.md\n./_posts/test.md\n./_posts/test.md\n````\n-F 可以指定字段分隔符，不指定时默认为空白字符，$NF输出最后一个字段.\n\n## grep\nLinux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。\n1. 格式\ngrep [options]\n\n1. 主要参数\n```\n[options]主要参数：\n－c：只输出匹配行的计数。\n－I：不区分大小写(只适用于单字符)。\n－h：查询多文件时不显示文件名。\n－l：查询多文件时只输出包含匹配字符的文件名。\n－n：显示匹配行及行号。\n－s：不显示不存在或无匹配文本的错误信息。\n－v：显示不包含匹配文本的所有行。\npattern正则表达式主要参数：\n\\： 忽略正则表达式中特殊字符的原有含义。\n^：匹配正则表达式的开始行。\n$: 匹配正则表达式的结束行。\n\\<：从匹配正则表达式单词边界。\n\\>：到匹配正则表达式单词边界。\n[ ]：单个字符，如[A]即A符合要求 。\n[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。\n.：所有的单个字符。\n* ：有字符，长度可以为0。\n```\n1. grep命令使用简单实例\n$ grep ‘ERROR’ d*\n匹配当前目录所有以d开头的文件中包含ERROR的行。\n$ grep ‘ERROR’ a.log b.log c.log\n显示在a.log b.log c.log 文件中匹配ERROR的行。\n$ grep ‘[a-z]\\{5\\}’ a.log\n显示所有包含每个字符串至少有5个连续小写字符的字符串的行。\n$ grep ‘w\\(es\\)t.*\\1′ a.log\n如果west被匹配，则es就被存储到内存中，并标记为1，然后搜索任意个字符(.*)，这些字符后面紧跟着 另外一个es(\\1)，找到就显示该行。如果用egrep或grep -E，就不用”\\”号进行转义，直接写成’w(es)t.*\\1′就可以了。\n\n1. grep高级使用技巧\n假设您正在’/usr/local/spark/’目录下搜索带字符 串’spark’的文件：\n$ grep “spark” /usr/local/spark/*\n默认情况下，’grep’只搜索当前目录。遇到子目录，’grep’报出：\ngrep: spark: Is a directory\n-r选项可以第归搜索：grep -r\n也可以忽略子目录：grep -d skip\n\n1. grep其他参数：\ngrep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，\ngrep -l pattern files ：只列出匹配的文件名，\ngrep -L pattern files ：列出不匹配的文件名，\ngrep -w pattern files ：只匹配整个单词，而不是字符串的一部分(如匹配’food’，而不是’foo’)，\ngrep -C number pattern files ：匹配的上下文分别显示[number]行，\n如 grep -C 3 \"hexo\" source/_posts/* 查找hexo输出hexo前后各三行\ngrep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，\ngrep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。\ngrep -n pattern files  即可显示行号信息\ngrep -c pattern files  即可查找总行数\n\n1. grep 正则表达式：\n\\< 和 \\> 分别标注单词的开始与结尾。\n例如：\ngrep good * 会匹配 ‘goodddd’、’ggood’、’good’等，\ngrep ‘\\<good’ * 匹配’goodddd’和’good’，但不是’ggood’，\ngrep ‘\\<good\\>’ 只匹配’good’。\n‘^’：指匹配的字符串在行首，\n‘$’：指匹配的字符串在行 尾，\n11. grep正则表达式可以使用类名\n可以使用国际模式匹配的类名：\n[[:upper:]]   [A-Z]\n[[:lower:]]   [a-z]\n[[:digit:]]   [0-9]\n[[:alnum:]]   [0-9a-zA-Z]\n[[:space:]]   空格或tab\n[[:alpha:]]   [a-zA-Z]\ngrep '#[[:upper:]][[:upper:]]' data.doc     #查询以#开头紧跟着两个大写字\ngrep 在linux下使用很多，功能很全面，尤其是正则表达式使用得当可以很好的提升工作效率。\n","source":"_posts/findandawk.md","raw":"---\ntitle: find awk 和 grep 使用总结\ndate: 2017-02-23 23:57:54\ntags: linux\n---\nfind awk 和 grep 使用总结\n使用linux工作经常会用到find这个工具去查找文件，找到的文件可以通过awk进行操作，也可以配合grep\n一起操作，这三个工具一起使用基本上可以高效的完成linux下百分之九十的文本处理工作，今天主要记录一下这三个\n工具的使用方法。\n<!--more-->\n## find\n如果我什么参数也不给，find会打印出当前目录下所有的文件和目录名\n``` bash\nfind\n.\n./_posts\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n```\n这里有几个默认的参数\n1. 默认查找的目录为当前目录\n1. 默认查找匹配所有记录\n1. 默认打印输出匹配到的记录-print\n上面的这个find与下面的find输出一致\n\n``` bash\nfind  ./ -print -name \"*\"\n./\n./-name\n./_posts\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n```\n-print0可以去掉换行\n``` bash\nfind  ./ -print0 -name \"*\"\n././-name./_posts./_posts/hello-world.md./_posts/findandawk.md./_posts/test.md\n```\n-printf 可以格式化输出\n```bash\nfind . -type f -printf \" %Tc %p\\n\"\n Mon 27 Feb 2017 08:54:40 PM CST ./-name\n Mon 27 Feb 2017 12:31:29 AM CST ./_posts/hello-world.md\n Mon 27 Feb 2017 09:01:12 PM CST ./_posts/findandawk.md\n Sat 25 Feb 2017 01:56:06 AM CST ./_posts/test.md\n```\n格式化输出的参数有很多这里不一一列举具体可以参考手册 man find 看更多printf的相关内容\n当然输出不是find的主要功能，find 主要还是查找功能。\nfind 可以按照文件名称，文件类型，权限权限，访问时间等等多种维度去查找,但是我们一般使用最多的是按照文件名称来查找的\n```bash\n按文件名查找\nfind ./ -name \"*.md\"\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n按文件类型查找\nfind ./ -type f -name \"*.md\"\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/test.md\n\n一天以前的文件\nfind ./ -mtime +1\n```\nfind还有一个exec的参数可以对找到的文件执行相应的操作，但是这个有一定的危险如果你执行的动作是\n删除的话请慎重使用，但是rm在-exec里出现的使用频率往往很高\n```bash\n用ls列出找到的文件\n./ -mtime +1 -exec ls -l {} \\;\n-rw-rw-r--. 1 fangqing fangqing 5456 Feb 25 01:56 ./_posts/test.md\n强制删除当前目录下所有日志，这个动作很危险，要注意检查防止误操作\nfind ./ -name \"*.log\"  -exec rm -f {} \\;\n```\nfind的用法和参数实在是太多，有些高级技巧在需要的时候我就查一下手册，上面find的这些查找参数可以满足日常百分之九十的查找工作。\n# awk\nawk是一门脚本语言，awk是三位作者名字的首字母，关于awk起源的内容不写了。\nawk是linux下文本处理的瑞士军刀，你可以通过awk把字符串按照你想要的格式进行切分、合并、拼接、转换\n甚至算术运算。\n首先需要记录一下awk的几个内置变量\n```bash\nawk\n    ARGC        参数数量\n    ARGIND      当前处理文件在ARGV中的索引\n    ARGV        命令行参数数组\n    FILENAME    当前处理文件的文件名\n    FS          输入字段的分割符\n    NF          记录字段数量.\n    NR          当前输入的记录数量.\n    OFMT        数字输出格式, 默认为\"%.6g\".\n    OFS         输出字段分隔符.\n    ORS         输出记录分割符.\n    RS          输入记录分割符号.\n```\n这几个变量对awk处理文本有很大影响基本常用就是这几个变量下面记录几个案例\n```bash\n./ -print -name \"*\" -exec ls -l {} \\; |awk '{print $NF}'\n./\n-name\n_posts\n./-name\n./-name\n./_posts\nfindandawk.md\nhello-world.md\ntest.md\n./_posts/hello-world.md\n./_posts/hello-world.md\n./_posts/findandawk.md\n./_posts/findandawk.md\n./_posts/test.md\n./_posts/test.md\n````\n-F 可以指定字段分隔符，不指定时默认为空白字符，$NF输出最后一个字段.\n\n## grep\nLinux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。\n1. 格式\ngrep [options]\n\n1. 主要参数\n```\n[options]主要参数：\n－c：只输出匹配行的计数。\n－I：不区分大小写(只适用于单字符)。\n－h：查询多文件时不显示文件名。\n－l：查询多文件时只输出包含匹配字符的文件名。\n－n：显示匹配行及行号。\n－s：不显示不存在或无匹配文本的错误信息。\n－v：显示不包含匹配文本的所有行。\npattern正则表达式主要参数：\n\\： 忽略正则表达式中特殊字符的原有含义。\n^：匹配正则表达式的开始行。\n$: 匹配正则表达式的结束行。\n\\<：从匹配正则表达式单词边界。\n\\>：到匹配正则表达式单词边界。\n[ ]：单个字符，如[A]即A符合要求 。\n[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。\n.：所有的单个字符。\n* ：有字符，长度可以为0。\n```\n1. grep命令使用简单实例\n$ grep ‘ERROR’ d*\n匹配当前目录所有以d开头的文件中包含ERROR的行。\n$ grep ‘ERROR’ a.log b.log c.log\n显示在a.log b.log c.log 文件中匹配ERROR的行。\n$ grep ‘[a-z]\\{5\\}’ a.log\n显示所有包含每个字符串至少有5个连续小写字符的字符串的行。\n$ grep ‘w\\(es\\)t.*\\1′ a.log\n如果west被匹配，则es就被存储到内存中，并标记为1，然后搜索任意个字符(.*)，这些字符后面紧跟着 另外一个es(\\1)，找到就显示该行。如果用egrep或grep -E，就不用”\\”号进行转义，直接写成’w(es)t.*\\1′就可以了。\n\n1. grep高级使用技巧\n假设您正在’/usr/local/spark/’目录下搜索带字符 串’spark’的文件：\n$ grep “spark” /usr/local/spark/*\n默认情况下，’grep’只搜索当前目录。遇到子目录，’grep’报出：\ngrep: spark: Is a directory\n-r选项可以第归搜索：grep -r\n也可以忽略子目录：grep -d skip\n\n1. grep其他参数：\ngrep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，\ngrep -l pattern files ：只列出匹配的文件名，\ngrep -L pattern files ：列出不匹配的文件名，\ngrep -w pattern files ：只匹配整个单词，而不是字符串的一部分(如匹配’food’，而不是’foo’)，\ngrep -C number pattern files ：匹配的上下文分别显示[number]行，\n如 grep -C 3 \"hexo\" source/_posts/* 查找hexo输出hexo前后各三行\ngrep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，\ngrep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。\ngrep -n pattern files  即可显示行号信息\ngrep -c pattern files  即可查找总行数\n\n1. grep 正则表达式：\n\\< 和 \\> 分别标注单词的开始与结尾。\n例如：\ngrep good * 会匹配 ‘goodddd’、’ggood’、’good’等，\ngrep ‘\\<good’ * 匹配’goodddd’和’good’，但不是’ggood’，\ngrep ‘\\<good\\>’ 只匹配’good’。\n‘^’：指匹配的字符串在行首，\n‘$’：指匹配的字符串在行 尾，\n11. grep正则表达式可以使用类名\n可以使用国际模式匹配的类名：\n[[:upper:]]   [A-Z]\n[[:lower:]]   [a-z]\n[[:digit:]]   [0-9]\n[[:alnum:]]   [0-9a-zA-Z]\n[[:space:]]   空格或tab\n[[:alpha:]]   [a-zA-Z]\ngrep '#[[:upper:]][[:upper:]]' data.doc     #查询以#开头紧跟着两个大写字\ngrep 在linux下使用很多，功能很全面，尤其是正则表达式使用得当可以很好的提升工作效率。\n","slug":"findandawk","published":1,"updated":"2017-02-28T14:48:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj02ldeo60000aatu8ocr26dh","content":"<p>find awk 和 grep 使用总结<br>使用linux工作经常会用到find这个工具去查找文件，找到的文件可以通过awk进行操作，也可以配合grep<br>一起操作，这三个工具一起使用基本上可以高效的完成linux下百分之九十的文本处理工作，今天主要记录一下这三个<br>工具的使用方法。<br><a id=\"more\"></a></p>\n<h2 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h2><p>如果我什么参数也不给，find会打印出当前目录下所有的文件和目录名<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">find</div><div class=\"line\">.</div><div class=\"line\">./_posts</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div></pre></td></tr></table></figure></p>\n<p>这里有几个默认的参数</p>\n<ol>\n<li>默认查找的目录为当前目录</li>\n<li>默认查找匹配所有记录</li>\n<li>默认打印输出匹配到的记录-print<br>上面的这个find与下面的find输出一致</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">find  ./ -print -name <span class=\"string\">\"*\"</span></div><div class=\"line\">./</div><div class=\"line\">./-name</div><div class=\"line\">./_posts</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div></pre></td></tr></table></figure>\n<p>-print0可以去掉换行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">find  ./ -print0 -name <span class=\"string\">\"*\"</span></div><div class=\"line\">././-name./_posts./_posts/hello-world.md./_posts/findandawk.md./_posts/test.md</div></pre></td></tr></table></figure></p>\n<p>-printf 可以格式化输出<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">find . -type f -printf <span class=\"string\">\" %Tc %p\\n\"</span></div><div class=\"line\"> Mon 27 Feb 2017 08:54:40 PM CST ./-name</div><div class=\"line\"> Mon 27 Feb 2017 12:31:29 AM CST ./_posts/hello-world.md</div><div class=\"line\"> Mon 27 Feb 2017 09:01:12 PM CST ./_posts/findandawk.md</div><div class=\"line\"> Sat 25 Feb 2017 01:56:06 AM CST ./_posts/test.md</div></pre></td></tr></table></figure></p>\n<p>格式化输出的参数有很多这里不一一列举具体可以参考手册 man find 看更多printf的相关内容<br>当然输出不是find的主要功能，find 主要还是查找功能。<br>find 可以按照文件名称，文件类型，权限权限，访问时间等等多种维度去查找,但是我们一般使用最多的是按照文件名称来查找的<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">按文件名查找</div><div class=\"line\">find ./ -name <span class=\"string\">\"*.md\"</span></div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\">按文件类型查找</div><div class=\"line\">find ./ -type f -name <span class=\"string\">\"*.md\"</span></div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\"></div><div class=\"line\">一天以前的文件</div><div class=\"line\">find ./ -mtime +1</div></pre></td></tr></table></figure></p>\n<p>find还有一个exec的参数可以对找到的文件执行相应的操作，但是这个有一定的危险如果你执行的动作是<br>删除的话请慎重使用，但是rm在-exec里出现的使用频率往往很高<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">用ls列出找到的文件</div><div class=\"line\">./ -mtime +1 -exec ls <span class=\"_\">-l</span> &#123;&#125; \\;</div><div class=\"line\">-rw-rw-r--. 1 fangqing fangqing 5456 Feb 25 01:56 ./_posts/test.md</div><div class=\"line\">强制删除当前目录下所有日志，这个动作很危险，要注意检查防止误操作</div><div class=\"line\">find ./ -name <span class=\"string\">\"*.log\"</span>  -exec rm <span class=\"_\">-f</span> &#123;&#125; \\;</div></pre></td></tr></table></figure></p>\n<p>find的用法和参数实在是太多，有些高级技巧在需要的时候我就查一下手册，上面find的这些查找参数可以满足日常百分之九十的查找工作。</p>\n<h1 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h1><p>awk是一门脚本语言，awk是三位作者名字的首字母，关于awk起源的内容不写了。<br>awk是linux下文本处理的瑞士军刀，你可以通过awk把字符串按照你想要的格式进行切分、合并、拼接、转换<br>甚至算术运算。<br>首先需要记录一下awk的几个内置变量<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">awk</div><div class=\"line\">    ARGC        参数数量</div><div class=\"line\">    ARGIND      当前处理文件在ARGV中的索引</div><div class=\"line\">    ARGV        命令行参数数组</div><div class=\"line\">    FILENAME    当前处理文件的文件名</div><div class=\"line\">    FS          输入字段的分割符</div><div class=\"line\">    NF          记录字段数量.</div><div class=\"line\">    NR          当前输入的记录数量.</div><div class=\"line\">    OFMT        数字输出格式, 默认为<span class=\"string\">\"%.6g\"</span>.</div><div class=\"line\">    OFS         输出字段分隔符.</div><div class=\"line\">    ORS         输出记录分割符.</div><div class=\"line\">    RS          输入记录分割符号.</div></pre></td></tr></table></figure></p>\n<p>这几个变量对awk处理文本有很大影响基本常用就是这几个变量下面记录几个案例<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">./ -print -name <span class=\"string\">\"*\"</span> -exec ls <span class=\"_\">-l</span> &#123;&#125; \\; |awk <span class=\"string\">'&#123;print $NF&#125;'</span></div><div class=\"line\">./</div><div class=\"line\">-name</div><div class=\"line\">_posts</div><div class=\"line\">./-name</div><div class=\"line\">./-name</div><div class=\"line\">./_posts</div><div class=\"line\">findandawk.md</div><div class=\"line\">hello-world.md</div><div class=\"line\">test.md</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\">`</div></pre></td></tr></table></figure></p>\n<p>-F 可以指定字段分隔符，不指定时默认为空白字符，$NF输出最后一个字段.</p>\n<h2 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h2><p>Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</p>\n<ol>\n<li><p>格式<br>grep [options]</p>\n</li>\n<li><p>主要参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">[options]主要参数：</div><div class=\"line\">－c：只输出匹配行的计数。</div><div class=\"line\">－I：不区分大小写(只适用于单字符)。</div><div class=\"line\">－h：查询多文件时不显示文件名。</div><div class=\"line\">－l：查询多文件时只输出包含匹配字符的文件名。</div><div class=\"line\">－n：显示匹配行及行号。</div><div class=\"line\">－s：不显示不存在或无匹配文本的错误信息。</div><div class=\"line\">－v：显示不包含匹配文本的所有行。</div><div class=\"line\">pattern正则表达式主要参数：</div><div class=\"line\">\\： 忽略正则表达式中特殊字符的原有含义。</div><div class=\"line\">^：匹配正则表达式的开始行。</div><div class=\"line\">$: 匹配正则表达式的结束行。</div><div class=\"line\">\\&lt;：从匹配正则表达式单词边界。</div><div class=\"line\">\\&gt;：到匹配正则表达式单词边界。</div><div class=\"line\">[ ]：单个字符，如[A]即A符合要求 。</div><div class=\"line\">[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。</div><div class=\"line\">.：所有的单个字符。</div><div class=\"line\">* ：有字符，长度可以为0。</div></pre></td></tr></table></figure>\n</li>\n<li><p>grep命令使用简单实例<br>$ grep ‘ERROR’ d<em><br>匹配当前目录所有以d开头的文件中包含ERROR的行。<br>$ grep ‘ERROR’ a.log b.log c.log<br>显示在a.log b.log c.log 文件中匹配ERROR的行。<br>$ grep ‘[a-z]{5}’ a.log<br>显示所有包含每个字符串至少有5个连续小写字符的字符串的行。<br>$ grep ‘w(es)t.</em>\\1′ a.log<br>如果west被匹配，则es就被存储到内存中，并标记为1，然后搜索任意个字符(.<em>)，这些字符后面紧跟着 另外一个es(\\1)，找到就显示该行。如果用egrep或grep -E，就不用”\\”号进行转义，直接写成’w(es)t.</em>\\1′就可以了。</p>\n</li>\n<li><p>grep高级使用技巧<br>假设您正在’/usr/local/spark/’目录下搜索带字符 串’spark’的文件：<br>$ grep “spark” /usr/local/spark/*<br>默认情况下，’grep’只搜索当前目录。遇到子目录，’grep’报出：<br>grep: spark: Is a directory<br>-r选项可以第归搜索：grep -r<br>也可以忽略子目录：grep -d skip</p>\n</li>\n<li><p>grep其他参数：<br>grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，<br>grep -l pattern files ：只列出匹配的文件名，<br>grep -L pattern files ：列出不匹配的文件名，<br>grep -w pattern files ：只匹配整个单词，而不是字符串的一部分(如匹配’food’，而不是’foo’)，<br>grep -C number pattern files ：匹配的上下文分别显示[number]行，<br>如 grep -C 3 “hexo” source/_posts/* 查找hexo输出hexo前后各三行<br>grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，<br>grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。<br>grep -n pattern files  即可显示行号信息<br>grep -c pattern files  即可查找总行数</p>\n</li>\n<li><p>grep 正则表达式：<br>\\&lt; 和 > 分别标注单词的开始与结尾。<br>例如：<br>grep good <em> 会匹配 ‘goodddd’、’ggood’、’good’等，<br>grep ‘\\&lt;good’ </em> 匹配’goodddd’和’good’，但不是’ggood’，<br>grep ‘\\<good\\>’ 只匹配’good’。<br>‘^’：指匹配的字符串在行首，<br>‘$’：指匹配的字符串在行 尾，</good\\></p>\n</li>\n<li>grep正则表达式可以使用类名<br>可以使用国际模式匹配的类名：<br>[[:upper:]]   [A-Z]<br>[[:lower:]]   [a-z]<br>[[:digit:]]   [0-9]<br>[[:alnum:]]   [0-9a-zA-Z]<br>[[:space:]]   空格或tab<br>[[:alpha:]]   [a-zA-Z]<br>grep ‘#[[:upper:]][[:upper:]]’ data.doc     #查询以#开头紧跟着两个大写字<br>grep 在linux下使用很多，功能很全面，尤其是正则表达式使用得当可以很好的提升工作效率。</li>\n</ol>\n","excerpt":"<p>find awk 和 grep 使用总结<br>使用linux工作经常会用到find这个工具去查找文件，找到的文件可以通过awk进行操作，也可以配合grep<br>一起操作，这三个工具一起使用基本上可以高效的完成linux下百分之九十的文本处理工作，今天主要记录一下这三个<br>工具的使用方法。<br>","more":"</p>\n<h2 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h2><p>如果我什么参数也不给，find会打印出当前目录下所有的文件和目录名<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">find</div><div class=\"line\">.</div><div class=\"line\">./_posts</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div></pre></td></tr></table></figure></p>\n<p>这里有几个默认的参数</p>\n<ol>\n<li>默认查找的目录为当前目录</li>\n<li>默认查找匹配所有记录</li>\n<li>默认打印输出匹配到的记录-print<br>上面的这个find与下面的find输出一致</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">find  ./ -print -name <span class=\"string\">\"*\"</span></div><div class=\"line\">./</div><div class=\"line\">./-name</div><div class=\"line\">./_posts</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div></pre></td></tr></table></figure>\n<p>-print0可以去掉换行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">find  ./ -print0 -name <span class=\"string\">\"*\"</span></div><div class=\"line\">././-name./_posts./_posts/hello-world.md./_posts/findandawk.md./_posts/test.md</div></pre></td></tr></table></figure></p>\n<p>-printf 可以格式化输出<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">find . -type f -printf <span class=\"string\">\" %Tc %p\\n\"</span></div><div class=\"line\"> Mon 27 Feb 2017 08:54:40 PM CST ./-name</div><div class=\"line\"> Mon 27 Feb 2017 12:31:29 AM CST ./_posts/hello-world.md</div><div class=\"line\"> Mon 27 Feb 2017 09:01:12 PM CST ./_posts/findandawk.md</div><div class=\"line\"> Sat 25 Feb 2017 01:56:06 AM CST ./_posts/test.md</div></pre></td></tr></table></figure></p>\n<p>格式化输出的参数有很多这里不一一列举具体可以参考手册 man find 看更多printf的相关内容<br>当然输出不是find的主要功能，find 主要还是查找功能。<br>find 可以按照文件名称，文件类型，权限权限，访问时间等等多种维度去查找,但是我们一般使用最多的是按照文件名称来查找的<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">按文件名查找</div><div class=\"line\">find ./ -name <span class=\"string\">\"*.md\"</span></div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\">按文件类型查找</div><div class=\"line\">find ./ -type f -name <span class=\"string\">\"*.md\"</span></div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\"></div><div class=\"line\">一天以前的文件</div><div class=\"line\">find ./ -mtime +1</div></pre></td></tr></table></figure></p>\n<p>find还有一个exec的参数可以对找到的文件执行相应的操作，但是这个有一定的危险如果你执行的动作是<br>删除的话请慎重使用，但是rm在-exec里出现的使用频率往往很高<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">用ls列出找到的文件</div><div class=\"line\">./ -mtime +1 -exec ls <span class=\"_\">-l</span> &#123;&#125; \\;</div><div class=\"line\">-rw-rw-r--. 1 fangqing fangqing 5456 Feb 25 01:56 ./_posts/test.md</div><div class=\"line\">强制删除当前目录下所有日志，这个动作很危险，要注意检查防止误操作</div><div class=\"line\">find ./ -name <span class=\"string\">\"*.log\"</span>  -exec rm <span class=\"_\">-f</span> &#123;&#125; \\;</div></pre></td></tr></table></figure></p>\n<p>find的用法和参数实在是太多，有些高级技巧在需要的时候我就查一下手册，上面find的这些查找参数可以满足日常百分之九十的查找工作。</p>\n<h1 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h1><p>awk是一门脚本语言，awk是三位作者名字的首字母，关于awk起源的内容不写了。<br>awk是linux下文本处理的瑞士军刀，你可以通过awk把字符串按照你想要的格式进行切分、合并、拼接、转换<br>甚至算术运算。<br>首先需要记录一下awk的几个内置变量<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">awk</div><div class=\"line\">    ARGC        参数数量</div><div class=\"line\">    ARGIND      当前处理文件在ARGV中的索引</div><div class=\"line\">    ARGV        命令行参数数组</div><div class=\"line\">    FILENAME    当前处理文件的文件名</div><div class=\"line\">    FS          输入字段的分割符</div><div class=\"line\">    NF          记录字段数量.</div><div class=\"line\">    NR          当前输入的记录数量.</div><div class=\"line\">    OFMT        数字输出格式, 默认为<span class=\"string\">\"%.6g\"</span>.</div><div class=\"line\">    OFS         输出字段分隔符.</div><div class=\"line\">    ORS         输出记录分割符.</div><div class=\"line\">    RS          输入记录分割符号.</div></pre></td></tr></table></figure></p>\n<p>这几个变量对awk处理文本有很大影响基本常用就是这几个变量下面记录几个案例<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">./ -print -name <span class=\"string\">\"*\"</span> -exec ls <span class=\"_\">-l</span> &#123;&#125; \\; |awk <span class=\"string\">'&#123;print $NF&#125;'</span></div><div class=\"line\">./</div><div class=\"line\">-name</div><div class=\"line\">_posts</div><div class=\"line\">./-name</div><div class=\"line\">./-name</div><div class=\"line\">./_posts</div><div class=\"line\">findandawk.md</div><div class=\"line\">hello-world.md</div><div class=\"line\">test.md</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/hello-world.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/findandawk.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\">./_posts/test.md</div><div class=\"line\">`</div></pre></td></tr></table></figure></p>\n<p>-F 可以指定字段分隔符，不指定时默认为空白字符，$NF输出最后一个字段.</p>\n<h2 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h2><p>Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</p>\n<ol>\n<li><p>格式<br>grep [options]</p>\n</li>\n<li><p>主要参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">[options]主要参数：</div><div class=\"line\">－c：只输出匹配行的计数。</div><div class=\"line\">－I：不区分大小写(只适用于单字符)。</div><div class=\"line\">－h：查询多文件时不显示文件名。</div><div class=\"line\">－l：查询多文件时只输出包含匹配字符的文件名。</div><div class=\"line\">－n：显示匹配行及行号。</div><div class=\"line\">－s：不显示不存在或无匹配文本的错误信息。</div><div class=\"line\">－v：显示不包含匹配文本的所有行。</div><div class=\"line\">pattern正则表达式主要参数：</div><div class=\"line\">\\： 忽略正则表达式中特殊字符的原有含义。</div><div class=\"line\">^：匹配正则表达式的开始行。</div><div class=\"line\">$: 匹配正则表达式的结束行。</div><div class=\"line\">\\&lt;：从匹配正则表达式单词边界。</div><div class=\"line\">\\&gt;：到匹配正则表达式单词边界。</div><div class=\"line\">[ ]：单个字符，如[A]即A符合要求 。</div><div class=\"line\">[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。</div><div class=\"line\">.：所有的单个字符。</div><div class=\"line\">* ：有字符，长度可以为0。</div></pre></td></tr></table></figure>\n</li>\n<li><p>grep命令使用简单实例<br>$ grep ‘ERROR’ d<em><br>匹配当前目录所有以d开头的文件中包含ERROR的行。<br>$ grep ‘ERROR’ a.log b.log c.log<br>显示在a.log b.log c.log 文件中匹配ERROR的行。<br>$ grep ‘[a-z]{5}’ a.log<br>显示所有包含每个字符串至少有5个连续小写字符的字符串的行。<br>$ grep ‘w(es)t.</em>\\1′ a.log<br>如果west被匹配，则es就被存储到内存中，并标记为1，然后搜索任意个字符(.<em>)，这些字符后面紧跟着 另外一个es(\\1)，找到就显示该行。如果用egrep或grep -E，就不用”\\”号进行转义，直接写成’w(es)t.</em>\\1′就可以了。</p>\n</li>\n<li><p>grep高级使用技巧<br>假设您正在’/usr/local/spark/’目录下搜索带字符 串’spark’的文件：<br>$ grep “spark” /usr/local/spark/*<br>默认情况下，’grep’只搜索当前目录。遇到子目录，’grep’报出：<br>grep: spark: Is a directory<br>-r选项可以第归搜索：grep -r<br>也可以忽略子目录：grep -d skip</p>\n</li>\n<li><p>grep其他参数：<br>grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，<br>grep -l pattern files ：只列出匹配的文件名，<br>grep -L pattern files ：列出不匹配的文件名，<br>grep -w pattern files ：只匹配整个单词，而不是字符串的一部分(如匹配’food’，而不是’foo’)，<br>grep -C number pattern files ：匹配的上下文分别显示[number]行，<br>如 grep -C 3 “hexo” source/_posts/* 查找hexo输出hexo前后各三行<br>grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，<br>grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。<br>grep -n pattern files  即可显示行号信息<br>grep -c pattern files  即可查找总行数</p>\n</li>\n<li><p>grep 正则表达式：<br>\\&lt; 和 > 分别标注单词的开始与结尾。<br>例如：<br>grep good <em> 会匹配 ‘goodddd’、’ggood’、’good’等，<br>grep ‘\\&lt;good’ </em> 匹配’goodddd’和’good’，但不是’ggood’，<br>grep ‘\\<good\\>’ 只匹配’good’。<br>‘^’：指匹配的字符串在行首，<br>‘$’：指匹配的字符串在行 尾，</p>\n</li>\n<li>grep正则表达式可以使用类名<br>可以使用国际模式匹配的类名：<br>[[:upper:]]   [A-Z]<br>[[:lower:]]   [a-z]<br>[[:digit:]]   [0-9]<br>[[:alnum:]]   [0-9a-zA-Z]<br>[[:space:]]   空格或tab<br>[[:alpha:]]   [a-zA-Z]<br>grep ‘#[[:upper:]][[:upper:]]’ data.doc     #查询以#开头紧跟着两个大写字<br>grep 在linux下使用很多，功能很全面，尤其是正则表达式使用得当可以很好的提升工作效率。</li>\n</ol>"},{"title":"hexo小试牛刀","date":"2017-02-21T15:57:54.000Z","_content":"欢迎大家关注我的空间，这是我用hexo写的第一篇博客，主要介绍下hexo的基本用法,后续我将在这里记录我学习和生活中值得记录下来的一些东西，仅仅给自己一些记录，当然如果有人看到了觉得有用那也挺好。\n## 入门\n<!--more-->\n###  创建一篇文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n详情请查阅: [Writing](https://hexo.io/docs/writing.html)\n\n### 创建完成就可以通过server来查看结果\n\n``` bash\n$ hexo server\n```\n\n详情请查阅: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\n详情请查阅: [Generating](https://hexo.io/docs/generating.html)\n\n### 发布到远程仓库\n\n``` bash\n$ hexo deploy\n```\n\n想请参考: [Deployment](https://hexo.io/docs/deployment.html)\n关于hexo的更多信息请登陆: [hexo](https://hexo.io/docs)\n\n## 使用next\n```\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n从Next的Gihub仓库中获取最新版本。\n启用\n需要修改/root/_config.yml配置项theme：\n```\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\n```\n验证是否启用\n```\n$ hexo s --debug\n```\nENOSPC Error (Linux)\n```\n  Sometimes when running the command $ hexo server it returns an error:\n\n  Error: watch ENOSPC ...\n\n  It can be fixed by running $ npm dedupe or, if that doesn’t help, try the following in the Linux console:\n\n  $ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n  This will increase the limit for the number of files you can watch.\n","source":"_posts/hello-world.md","raw":"---\ntitle: hexo小试牛刀\ndate: 2017-02-21 23:57:54\ntag: hexo\n---\n欢迎大家关注我的空间，这是我用hexo写的第一篇博客，主要介绍下hexo的基本用法,后续我将在这里记录我学习和生活中值得记录下来的一些东西，仅仅给自己一些记录，当然如果有人看到了觉得有用那也挺好。\n## 入门\n<!--more-->\n###  创建一篇文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n详情请查阅: [Writing](https://hexo.io/docs/writing.html)\n\n### 创建完成就可以通过server来查看结果\n\n``` bash\n$ hexo server\n```\n\n详情请查阅: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\n详情请查阅: [Generating](https://hexo.io/docs/generating.html)\n\n### 发布到远程仓库\n\n``` bash\n$ hexo deploy\n```\n\n想请参考: [Deployment](https://hexo.io/docs/deployment.html)\n关于hexo的更多信息请登陆: [hexo](https://hexo.io/docs)\n\n## 使用next\n```\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n从Next的Gihub仓库中获取最新版本。\n启用\n需要修改/root/_config.yml配置项theme：\n```\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\n```\n验证是否启用\n```\n$ hexo s --debug\n```\nENOSPC Error (Linux)\n```\n  Sometimes when running the command $ hexo server it returns an error:\n\n  Error: watch ENOSPC ...\n\n  It can be fixed by running $ npm dedupe or, if that doesn’t help, try the following in the Linux console:\n\n  $ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n  This will increase the limit for the number of files you can watch.\n","slug":"hello-world","published":1,"updated":"2017-03-08T23:50:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj02ldep90003aatuumi899jj","content":"<p>欢迎大家关注我的空间，这是我用hexo写的第一篇博客，主要介绍下hexo的基本用法,后续我将在这里记录我学习和生活中值得记录下来的一些东西，仅仅给自己一些记录，当然如果有人看到了觉得有用那也挺好。</p>\n<h2 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h2><a id=\"more\"></a>\n<h3 id=\"创建一篇文章\"><a href=\"#创建一篇文章\" class=\"headerlink\" title=\"创建一篇文章\"></a>创建一篇文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>详情请查阅: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"创建完成就可以通过server来查看结果\"><a href=\"#创建完成就可以通过server来查看结果\" class=\"headerlink\" title=\"创建完成就可以通过server来查看结果\"></a>创建完成就可以通过server来查看结果</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>详情请查阅: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>详情请查阅: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"发布到远程仓库\"><a href=\"#发布到远程仓库\" class=\"headerlink\" title=\"发布到远程仓库\"></a>发布到远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>想请参考: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a><br>关于hexo的更多信息请登陆: <a href=\"https://hexo.io/docs\" target=\"_blank\" rel=\"external\">hexo</a></p>\n<h2 id=\"使用next\"><a href=\"#使用next\" class=\"headerlink\" title=\"使用next\"></a>使用next</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd your-hexo-site</div><div class=\"line\">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n<p>从Next的Gihub仓库中获取最新版本。<br>启用<br>需要修改/root/_config.yml配置项theme：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: http://hexo.io/plugins/</div><div class=\"line\">## Themes: http://hexo.io/themes/</div><div class=\"line\">theme: next</div></pre></td></tr></table></figure></p>\n<p>验证是否启用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo s --debug</div></pre></td></tr></table></figure></p>\n<p>ENOSPC Error (Linux)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sometimes when running the command $ hexo server it returns an error:</div><div class=\"line\"></div><div class=\"line\">Error: watch ENOSPC ...</div><div class=\"line\"></div><div class=\"line\">It can be fixed by running $ npm dedupe or, if that doesn’t help, try the following in the Linux console:</div><div class=\"line\"></div><div class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</div></pre></td></tr></table></figure></p>\n<p>  This will increase the limit for the number of files you can watch.</p>\n","excerpt":"<p>欢迎大家关注我的空间，这是我用hexo写的第一篇博客，主要介绍下hexo的基本用法,后续我将在这里记录我学习和生活中值得记录下来的一些东西，仅仅给自己一些记录，当然如果有人看到了觉得有用那也挺好。</p>\n<h2 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h2>","more":"<h3 id=\"创建一篇文章\"><a href=\"#创建一篇文章\" class=\"headerlink\" title=\"创建一篇文章\"></a>创建一篇文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>详情请查阅: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"创建完成就可以通过server来查看结果\"><a href=\"#创建完成就可以通过server来查看结果\" class=\"headerlink\" title=\"创建完成就可以通过server来查看结果\"></a>创建完成就可以通过server来查看结果</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>详情请查阅: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>详情请查阅: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"发布到远程仓库\"><a href=\"#发布到远程仓库\" class=\"headerlink\" title=\"发布到远程仓库\"></a>发布到远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>想请参考: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a><br>关于hexo的更多信息请登陆: <a href=\"https://hexo.io/docs\">hexo</a></p>\n<h2 id=\"使用next\"><a href=\"#使用next\" class=\"headerlink\" title=\"使用next\"></a>使用next</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd your-hexo-site</div><div class=\"line\">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n<p>从Next的Gihub仓库中获取最新版本。<br>启用<br>需要修改/root/_config.yml配置项theme：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: http://hexo.io/plugins/</div><div class=\"line\">## Themes: http://hexo.io/themes/</div><div class=\"line\">theme: next</div></pre></td></tr></table></figure></p>\n<p>验证是否启用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo s --debug</div></pre></td></tr></table></figure></p>\n<p>ENOSPC Error (Linux)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sometimes when running the command $ hexo server it returns an error:</div><div class=\"line\"></div><div class=\"line\">Error: watch ENOSPC ...</div><div class=\"line\"></div><div class=\"line\">It can be fixed by running $ npm dedupe or, if that doesn’t help, try the following in the Linux console:</div><div class=\"line\"></div><div class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</div></pre></td></tr></table></figure></p>\n<p>  This will increase the limit for the number of files you can watch.</p>"},{"title":"spark设置shufferpattition数量","date":"2017-02-28T15:57:54.000Z","_content":"1. spark 2.0.1 加载csv文件\n```\nval option=Map(\"header\"->\"true\",\"seq\"->\":\")\nval tmpdf=spark.sqlContext.read.option(op).format(csv).load(\"/test.csv\");\ntmpdf.OrderBy(\"age\").write.csv(\"/testrs.csv\");\n```\n以上代码在spark-shell中执行默认有spark对象\n输出后在/testrs.csv目录下发现有200个小文件，非常小每个文件大约只有一辆行记录，这是因为sparksql默认的spark.sql.shuffle.partitions值为200，将这个参数在spark的配置文件spark-default中修改成我们想要的就可以了，也可以在代码中动态设置这个值，我自己设置为20。\n","source":"_posts/hello.md","raw":"---\ntitle: spark设置shufferpattition数量\ndate: 2017-02-28 23:57:54\ntags: spark\n---\n1. spark 2.0.1 加载csv文件\n```\nval option=Map(\"header\"->\"true\",\"seq\"->\":\")\nval tmpdf=spark.sqlContext.read.option(op).format(csv).load(\"/test.csv\");\ntmpdf.OrderBy(\"age\").write.csv(\"/testrs.csv\");\n```\n以上代码在spark-shell中执行默认有spark对象\n输出后在/testrs.csv目录下发现有200个小文件，非常小每个文件大约只有一辆行记录，这是因为sparksql默认的spark.sql.shuffle.partitions值为200，将这个参数在spark的配置文件spark-default中修改成我们想要的就可以了，也可以在代码中动态设置这个值，我自己设置为20。\n","slug":"hello","published":1,"updated":"2017-02-28T15:00:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj02ldepj0006aatuzl5l4ssn","content":"<ol>\n<li>spark 2.0.1 加载csv文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">val option=Map(&quot;header&quot;-&gt;&quot;true&quot;,&quot;seq&quot;-&gt;&quot;:&quot;)</div><div class=\"line\">val tmpdf=spark.sqlContext.read.option(op).format(csv).load(&quot;/test.csv&quot;);</div><div class=\"line\">tmpdf.OrderBy(&quot;age&quot;).write.csv(&quot;/testrs.csv&quot;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>以上代码在spark-shell中执行默认有spark对象<br>输出后在/testrs.csv目录下发现有200个小文件，非常小每个文件大约只有一辆行记录，这是因为sparksql默认的spark.sql.shuffle.partitions值为200，将这个参数在spark的配置文件spark-default中修改成我们想要的就可以了，也可以在代码中动态设置这个值，我自己设置为20。</p>\n","excerpt":"","more":"<ol>\n<li>spark 2.0.1 加载csv文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">val option=Map(&quot;header&quot;-&gt;&quot;true&quot;,&quot;seq&quot;-&gt;&quot;:&quot;)</div><div class=\"line\">val tmpdf=spark.sqlContext.read.option(op).format(csv).load(&quot;/test.csv&quot;);</div><div class=\"line\">tmpdf.OrderBy(&quot;age&quot;).write.csv(&quot;/testrs.csv&quot;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>以上代码在spark-shell中执行默认有spark对象<br>输出后在/testrs.csv目录下发现有200个小文件，非常小每个文件大约只有一辆行记录，这是因为sparksql默认的spark.sql.shuffle.partitions值为200，将这个参数在spark的配置文件spark-default中修改成我们想要的就可以了，也可以在代码中动态设置这个值，我自己设置为20。</p>\n"},{"title":"java 迭代器","date":"2017-03-08T12:57:54.000Z","_content":"\n\n\n这是一道java基础题目，要求输出一个数组\n```bash\n1 3 6 10 15 21\n2 5 9 14 20\n4 8 13 19\n7 12 18\n11 17\n16\n```\n<!-- more -->\n基本上就是数组的操作，代码如下：\n```java\nint xx[][] = new int[6][6];\nint num = 1;\n\n     for (int i = 0; i <= 5; i++) {\n\n         for (int j = 0; j <= 5; j++) {\n\n             xx[i][j] = -1;\n\n         }\n\n     }\n     for (int i = 0; i <= 5; i++) {\n         int m = i;\n         for (int j = 0; j <= i; j++) {\n             xx[j][m--] = num;\n             num++;\n         }\n         System.out.println();\n     }\n     for (int i = 0; i <= 5; i++) {\n         for (int j = 0; j <= 5; j++) {\n             if (xx[i][j] != -1)\n                 System.out.print(xx[j][i] + \" \");\n         }\n         System.out.println();\n     }\n```\n由这道题目引申出了数组的操作，上述题目我们自己定义了xx数组，自己定义的数组增、删、边界都要自己维护，但是一般项目开发中我们 都会选择array数组，array数组本身是一个动态数组，数组中定义了元素的增删操作也可以通过迭代器来判断边界。\n具体举例如下：\n\n```java\npublic static void main(String[] args) {\n       ArrayList<Integer> arrlist = new ArrayList<Integer>(5);//ArrayList 类型参数不能为基本类型\n       for (int i = 0; i < 5; i++) {\n           arrlist.add(i);\n       }\n       arrlist.add(0);\n       Iterator<Integer> it;\n       arrprint(arrlist.iterator());\n       for (it = arrlist.iterator(); it.hasNext(); ) {\n           if (it.next() == 0) {\n               it.remove();//如果是arrlist删除的话就会报错\n//                arrlist.remove((Integer)0); //Exception in thread \"main\" java.util.ConcurrentModificationException\n           }\n       }\n       System.out.println();\n       arrprint(arrlist.iterator());\n   }\n\n   private static void arrprint(Iterator<Integer> it) {\n       for (; it.hasNext(); ) {\n           System.out.print(it.next() + \" \");\n       }\n   }\n```\n结果如下\n\n```bash\n0 1 2 3 4 0\n1 2 3 4\n```\n上面报错的原因是当我们找到要删除的元素时直接去arraylist里面删除了元素没有告诉 迭代器，导致迭代器失效了。而直接使用迭代器删除就不会有这个问题，迭代器维护了数组的 下表索引。 在Java中，有很多的数据容器上面是以arrarylist为例，对于这些容器的操作有很多的共性。Java采用了迭代器来为各种容器提供了公共的操作接口。这样使得对容器的遍历操作与其具体的底层实现相隔离，达到解耦的效果，同时也更安全更便捷。\n迭代器是一种设计模式，它是一个对象，它可以遍历并选择序列中的对象，而开发人员不需要了解该序列的底层结构。迭代器通常被称为“轻量级”对象，因为创建它的代价小。\n\n1. Java中的Iterator有以下几个特点：\n11. 使用方法iterator()要求容器返回一个Iterator。第一次调用Iterator的next()方法时，它返回序列的第一个元素。注意：iterator()方法是java.lang.Iterable接口,被Collection继承。\n11. 使用next()获得序列中的下一个元素。\n11. 使用hasNext()检查序列中是否还有元素。\n11. 使用remove()将迭代器新返回的元素删除。\n","source":"_posts/iterator.md","raw":"---\ntitle: java 迭代器\ndate: 2017-03-08 20:57:54\ntags: java\n---\n\n\n\n这是一道java基础题目，要求输出一个数组\n```bash\n1 3 6 10 15 21\n2 5 9 14 20\n4 8 13 19\n7 12 18\n11 17\n16\n```\n<!-- more -->\n基本上就是数组的操作，代码如下：\n```java\nint xx[][] = new int[6][6];\nint num = 1;\n\n     for (int i = 0; i <= 5; i++) {\n\n         for (int j = 0; j <= 5; j++) {\n\n             xx[i][j] = -1;\n\n         }\n\n     }\n     for (int i = 0; i <= 5; i++) {\n         int m = i;\n         for (int j = 0; j <= i; j++) {\n             xx[j][m--] = num;\n             num++;\n         }\n         System.out.println();\n     }\n     for (int i = 0; i <= 5; i++) {\n         for (int j = 0; j <= 5; j++) {\n             if (xx[i][j] != -1)\n                 System.out.print(xx[j][i] + \" \");\n         }\n         System.out.println();\n     }\n```\n由这道题目引申出了数组的操作，上述题目我们自己定义了xx数组，自己定义的数组增、删、边界都要自己维护，但是一般项目开发中我们 都会选择array数组，array数组本身是一个动态数组，数组中定义了元素的增删操作也可以通过迭代器来判断边界。\n具体举例如下：\n\n```java\npublic static void main(String[] args) {\n       ArrayList<Integer> arrlist = new ArrayList<Integer>(5);//ArrayList 类型参数不能为基本类型\n       for (int i = 0; i < 5; i++) {\n           arrlist.add(i);\n       }\n       arrlist.add(0);\n       Iterator<Integer> it;\n       arrprint(arrlist.iterator());\n       for (it = arrlist.iterator(); it.hasNext(); ) {\n           if (it.next() == 0) {\n               it.remove();//如果是arrlist删除的话就会报错\n//                arrlist.remove((Integer)0); //Exception in thread \"main\" java.util.ConcurrentModificationException\n           }\n       }\n       System.out.println();\n       arrprint(arrlist.iterator());\n   }\n\n   private static void arrprint(Iterator<Integer> it) {\n       for (; it.hasNext(); ) {\n           System.out.print(it.next() + \" \");\n       }\n   }\n```\n结果如下\n\n```bash\n0 1 2 3 4 0\n1 2 3 4\n```\n上面报错的原因是当我们找到要删除的元素时直接去arraylist里面删除了元素没有告诉 迭代器，导致迭代器失效了。而直接使用迭代器删除就不会有这个问题，迭代器维护了数组的 下表索引。 在Java中，有很多的数据容器上面是以arrarylist为例，对于这些容器的操作有很多的共性。Java采用了迭代器来为各种容器提供了公共的操作接口。这样使得对容器的遍历操作与其具体的底层实现相隔离，达到解耦的效果，同时也更安全更便捷。\n迭代器是一种设计模式，它是一个对象，它可以遍历并选择序列中的对象，而开发人员不需要了解该序列的底层结构。迭代器通常被称为“轻量级”对象，因为创建它的代价小。\n\n1. Java中的Iterator有以下几个特点：\n11. 使用方法iterator()要求容器返回一个Iterator。第一次调用Iterator的next()方法时，它返回序列的第一个元素。注意：iterator()方法是java.lang.Iterable接口,被Collection继承。\n11. 使用next()获得序列中的下一个元素。\n11. 使用hasNext()检查序列中是否还有元素。\n11. 使用remove()将迭代器新返回的元素删除。\n","slug":"iterator","published":1,"updated":"2017-03-08T13:31:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj02ldepq0009aatugh38ggt0","content":"<p>这是一道java基础题目，要求输出一个数组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">1 3 6 10 15 21</div><div class=\"line\">2 5 9 14 20</div><div class=\"line\">4 8 13 19</div><div class=\"line\">7 12 18</div><div class=\"line\">11 17</div><div class=\"line\">16</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>基本上就是数组的操作，代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> xx[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">6</span>][<span class=\"number\">6</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> num = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">5</span>; j++) &#123;</div><div class=\"line\"></div><div class=\"line\">             xx[i][j] = -<span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">     &#125;</div><div class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\">         <span class=\"keyword\">int</span> m = i;</div><div class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; j++) &#123;</div><div class=\"line\">             xx[j][m--] = num;</div><div class=\"line\">             num++;</div><div class=\"line\">         &#125;</div><div class=\"line\">         System.out.println();</div><div class=\"line\">     &#125;</div><div class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">5</span>; j++) &#123;</div><div class=\"line\">             <span class=\"keyword\">if</span> (xx[i][j] != -<span class=\"number\">1</span>)</div><div class=\"line\">                 System.out.print(xx[j][i] + <span class=\"string\">\" \"</span>);</div><div class=\"line\">         &#125;</div><div class=\"line\">         System.out.println();</div><div class=\"line\">     &#125;</div></pre></td></tr></table></figure></p>\n<p>由这道题目引申出了数组的操作，上述题目我们自己定义了xx数组，自己定义的数组增、删、边界都要自己维护，但是一般项目开发中我们 都会选择array数组，array数组本身是一个动态数组，数组中定义了元素的增删操作也可以通过迭代器来判断边界。<br>具体举例如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">       ArrayList&lt;Integer&gt; arrlist = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;(<span class=\"number\">5</span>);<span class=\"comment\">//ArrayList 类型参数不能为基本类型</span></div><div class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\">           arrlist.add(i);</div><div class=\"line\">       &#125;</div><div class=\"line\">       arrlist.add(<span class=\"number\">0</span>);</div><div class=\"line\">       Iterator&lt;Integer&gt; it;</div><div class=\"line\">       arrprint(arrlist.iterator());</div><div class=\"line\">       <span class=\"keyword\">for</span> (it = arrlist.iterator(); it.hasNext(); ) &#123;</div><div class=\"line\">           <span class=\"keyword\">if</span> (it.next() == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">               it.remove();<span class=\"comment\">//如果是arrlist删除的话就会报错</span></div><div class=\"line\"><span class=\"comment\">//                arrlist.remove((Integer)0); //Exception in thread \"main\" java.util.ConcurrentModificationException</span></div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div><div class=\"line\">       System.out.println();</div><div class=\"line\">       arrprint(arrlist.iterator());</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">arrprint</span><span class=\"params\">(Iterator&lt;Integer&gt; it)</span> </span>&#123;</div><div class=\"line\">       <span class=\"keyword\">for</span> (; it.hasNext(); ) &#123;</div><div class=\"line\">           System.out.print(it.next() + <span class=\"string\">\" \"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>结果如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 1 2 3 4 0</div><div class=\"line\">1 2 3 4</div></pre></td></tr></table></figure>\n<p>上面报错的原因是当我们找到要删除的元素时直接去arraylist里面删除了元素没有告诉 迭代器，导致迭代器失效了。而直接使用迭代器删除就不会有这个问题，迭代器维护了数组的 下表索引。 在Java中，有很多的数据容器上面是以arrarylist为例，对于这些容器的操作有很多的共性。Java采用了迭代器来为各种容器提供了公共的操作接口。这样使得对容器的遍历操作与其具体的底层实现相隔离，达到解耦的效果，同时也更安全更便捷。<br>迭代器是一种设计模式，它是一个对象，它可以遍历并选择序列中的对象，而开发人员不需要了解该序列的底层结构。迭代器通常被称为“轻量级”对象，因为创建它的代价小。</p>\n<ol>\n<li>Java中的Iterator有以下几个特点：</li>\n<li>使用方法iterator()要求容器返回一个Iterator。第一次调用Iterator的next()方法时，它返回序列的第一个元素。注意：iterator()方法是java.lang.Iterable接口,被Collection继承。</li>\n<li>使用next()获得序列中的下一个元素。</li>\n<li>使用hasNext()检查序列中是否还有元素。</li>\n<li>使用remove()将迭代器新返回的元素删除。</li>\n</ol>\n","excerpt":"<p>这是一道java基础题目，要求输出一个数组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">1 3 6 10 15 21</div><div class=\"line\">2 5 9 14 20</div><div class=\"line\">4 8 13 19</div><div class=\"line\">7 12 18</div><div class=\"line\">11 17</div><div class=\"line\">16</div></pre></td></tr></table></figure></p>","more":"<p>基本上就是数组的操作，代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> xx[][] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">6</span>][<span class=\"number\">6</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> num = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">5</span>; j++) &#123;</div><div class=\"line\"></div><div class=\"line\">             xx[i][j] = -<span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">     &#125;</div><div class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\">         <span class=\"keyword\">int</span> m = i;</div><div class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; j++) &#123;</div><div class=\"line\">             xx[j][m--] = num;</div><div class=\"line\">             num++;</div><div class=\"line\">         &#125;</div><div class=\"line\">         System.out.println();</div><div class=\"line\">     &#125;</div><div class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">5</span>; j++) &#123;</div><div class=\"line\">             <span class=\"keyword\">if</span> (xx[i][j] != -<span class=\"number\">1</span>)</div><div class=\"line\">                 System.out.print(xx[j][i] + <span class=\"string\">\" \"</span>);</div><div class=\"line\">         &#125;</div><div class=\"line\">         System.out.println();</div><div class=\"line\">     &#125;</div></pre></td></tr></table></figure></p>\n<p>由这道题目引申出了数组的操作，上述题目我们自己定义了xx数组，自己定义的数组增、删、边界都要自己维护，但是一般项目开发中我们 都会选择array数组，array数组本身是一个动态数组，数组中定义了元素的增删操作也可以通过迭代器来判断边界。<br>具体举例如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">       ArrayList&lt;Integer&gt; arrlist = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;(<span class=\"number\">5</span>);<span class=\"comment\">//ArrayList 类型参数不能为基本类型</span></div><div class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</div><div class=\"line\">           arrlist.add(i);</div><div class=\"line\">       &#125;</div><div class=\"line\">       arrlist.add(<span class=\"number\">0</span>);</div><div class=\"line\">       Iterator&lt;Integer&gt; it;</div><div class=\"line\">       arrprint(arrlist.iterator());</div><div class=\"line\">       <span class=\"keyword\">for</span> (it = arrlist.iterator(); it.hasNext(); ) &#123;</div><div class=\"line\">           <span class=\"keyword\">if</span> (it.next() == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">               it.remove();<span class=\"comment\">//如果是arrlist删除的话就会报错</span></div><div class=\"line\"><span class=\"comment\">//                arrlist.remove((Integer)0); //Exception in thread \"main\" java.util.ConcurrentModificationException</span></div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div><div class=\"line\">       System.out.println();</div><div class=\"line\">       arrprint(arrlist.iterator());</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">arrprint</span><span class=\"params\">(Iterator&lt;Integer&gt; it)</span> </span>&#123;</div><div class=\"line\">       <span class=\"keyword\">for</span> (; it.hasNext(); ) &#123;</div><div class=\"line\">           System.out.print(it.next() + <span class=\"string\">\" \"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>结果如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 1 2 3 4 0</div><div class=\"line\">1 2 3 4</div></pre></td></tr></table></figure>\n<p>上面报错的原因是当我们找到要删除的元素时直接去arraylist里面删除了元素没有告诉 迭代器，导致迭代器失效了。而直接使用迭代器删除就不会有这个问题，迭代器维护了数组的 下表索引。 在Java中，有很多的数据容器上面是以arrarylist为例，对于这些容器的操作有很多的共性。Java采用了迭代器来为各种容器提供了公共的操作接口。这样使得对容器的遍历操作与其具体的底层实现相隔离，达到解耦的效果，同时也更安全更便捷。<br>迭代器是一种设计模式，它是一个对象，它可以遍历并选择序列中的对象，而开发人员不需要了解该序列的底层结构。迭代器通常被称为“轻量级”对象，因为创建它的代价小。</p>\n<ol>\n<li>Java中的Iterator有以下几个特点：</li>\n<li>使用方法iterator()要求容器返回一个Iterator。第一次调用Iterator的next()方法时，它返回序列的第一个元素。注意：iterator()方法是java.lang.Iterable接口,被Collection继承。</li>\n<li>使用next()获得序列中的下一个元素。</li>\n<li>使用hasNext()检查序列中是否还有元素。</li>\n<li>使用remove()将迭代器新返回的元素删除。</li>\n</ol>"},{"title":"linux 小工具使用技巧","date":"2017-02-22T15:57:54.000Z","_content":"工作中几乎每天都需要使用linux，刚开始接触linux觉得很高大上，适合装逼用，后面用着用着发现这东西不仅可以装逼还可以提高工作效率，开源界的各路高手为linux/unix写了非常多实用的小工具，这些工具配合起来使用可以极大的提升我们工作效率，今天主要记录一下join，cut,sort,paste,uniq,split 这几个小工具。\n<!--more-->\n首先跟大家说一下，linux下很多工作归根结底都是对文本的操作，比如我们要找到所有的文本文件，然后找到特定的内容保存。首先查找文本文件用到的是find,通过find我们可以找到很多路径，这些路径我们通过管道传递给grep awk join cut 这些小工具，作进一步的操作，最后将结果重定向到一个文件中保存。find awk grep这几个东西很强大我们后面会记录他的详细用法。\n# join的用法\njoin 普通文件关联\n首先看下join的文档\n```\njoin --help\nUsage: join [OPTION]... FILE1 FILE2\nFor each pair of input lines with identical join fields, write a line to\nstandard output.  The default join field is the first, delimited\nby whitespace.  When FILE1 or FILE2 (not both) is -, read standard input.\n\n  -a FILENUM        also print unpairable lines from file FILENUM, where\n                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2\n  -e EMPTY          replace missing input fields with EMPTY\n  -i, --ignore-case  ignore differences in case when comparing fields\n  -j FIELD          equivalent to '-1 FIELD -2 FIELD'\n  -o FORMAT         obey FORMAT while constructing output line\n  -t CHAR           use CHAR as input and output field separator\n  -v FILENUM        like -a FILENUM, but suppress joined output lines\n  -1 FIELD          join on this FIELD of file 1\n  -2 FIELD          join on this FIELD of file 2\n  --check-order     check that the input is correctly sorted, even\n                      if all input lines are pairable\n  --nocheck-order   do not check that the input is correctly sorted\n  --header          treat the first line in each file as field headers,\n                      print them without trying to pair them\n      --help     display this help and exit\n      --version  output version information and exit\n```\n上面这个 -1 -2 可以指定以那个字段为KEY来关联，这个也可以用-j来指定\n比如我们有两个文件a.txt,b.txt\na.txt           \n1 22            \n2 33            \n3 44            \n\n\n b.txt\n 1   a\n 2   b\n 3   c\n\n\n我们将两个文件关联到一起只需要一下操作\n```\njoin  a.txt b.txt\n\n1 22 a\n2 33 b\n3 44 c\n```\n按列关联在一起哪个文件在前面那个列就在前面\n\n# paste 合并\n\n比如我们有上面两个文件用paste来合并结果如下\n```\npaste a.txt b.txt\n\n1 22     1   a\n2 33     2   b\n3 44     3   c\n```\npaste也可以通过-s将文件按行来合并\n```\npaste -s a.txt  b.txt \n1 22    2 33    3 44\n1 a     2 b     3 c\n```\npaste-选项可以格式化输出内容，即对每一个（-），从标准输入中读一次数据。\njoin和paste都有其他参数比如下面会将两个文件以冒号分连接在一起：\n\n```\npaste -d: a.txt b.txt\n\n1 22:1   a\n2 33:2   b\n3 44:3   c\n```\n\n# cut 切分\n```\ncut -d\" \" -f 1 a.txt \n1 \n2 \n3 \n```\nf可以指定输出切分的字段，d可以指定字段分隔符\n# sort 排序\nsort 可以对文件中的记录按照一定的规则排序\nc.txt\n1\n3\n5\n7\n11\n2\n4\n6\n10\n8\n9\n```\nsort c.txt \n1\n10\n11\n2\n3\n4\n5\n6\n7\n8\n9\n```\n以字母序排列\n```\nsort -n c.txt \n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n```\n按照数字顺序进行排序，sort默认的是生序排列通过 r选项可以逆序排列。\n其他选项如:\n-k可以指定排序的字段，\n-t可以指定字段分割符。\n-f会将小写字母都转换为大写字母来进行比较，亦即忽略大小写\n-c会检查文件是否已排好序，如果乱序，则输出第一个乱序的行的相关信息，最后返回1\n-C会检查文件是否已排好序，如果乱序，不输出内容，仅返回1\n-M会以月份来排序，比如JAN小于FEB等等\n-b会忽略每一行前面的所有空白部分，从第一个可见字符开始比较。\n\nuniq 可以去掉文件中重复的列 其实sort的u选项也可以完成同样的操作.\n# split 和 dd 切分文件\nsplit可以将大文件切割成小文件,但是使用起来不是很方便个人用的少不展开说了。\n\ndd 也可以完成切割我个人觉得他更优雅一些,下面是我对自己在打包docker镜像时的分割操作，当时是由于网站上传文件的大小限制太大了不能上传，所以用dd将其且分成小文件。\n```\n#dd if=ubunt.tar bs=1024 count=97000 skip=0  of=ubuntu.tar.1\n#dd if=ubunt.tar bs=1024 count=97000 skip=97000  of=ubuntu.tar.2\n#cat ubuntu.tar.1 ubuntu.tar.2 > ubuntu.tar\ndd if=f21.tar bs=1024 count=97000 skip=0  of=fedora.tar.1\ndd if=f21.tar bs=1024 count=97000 skip=97000  of=fedora.tar.2\ndd if=f21.tar bs=1024 count=97000 skip=194000  of=fedora.tar.3\ndd if=mysql.tar bs=1024 count=97000 skip=0  of=mysql.tar.1\ndd if=mysql.tar bs=1024 count=97000 skip=97000  of=mysql.tar.2\ndd if=mysql.tar bs=1024 count=97000 skip=194000  of=mysql.tar.\n```\n其中bs表示写出块的大小，count表示写出块的数量，skip表示跳过多少个块，of表示输出文件，if表示输入文件.\n这几个工具有很多种用法，恰当的使用可以提高效率。\n","source":"_posts/test.md","raw":"---\ntitle: linux 小工具使用技巧\ndate: 2017-02-22 23:57:54\ntags: linux\n---\n工作中几乎每天都需要使用linux，刚开始接触linux觉得很高大上，适合装逼用，后面用着用着发现这东西不仅可以装逼还可以提高工作效率，开源界的各路高手为linux/unix写了非常多实用的小工具，这些工具配合起来使用可以极大的提升我们工作效率，今天主要记录一下join，cut,sort,paste,uniq,split 这几个小工具。\n<!--more-->\n首先跟大家说一下，linux下很多工作归根结底都是对文本的操作，比如我们要找到所有的文本文件，然后找到特定的内容保存。首先查找文本文件用到的是find,通过find我们可以找到很多路径，这些路径我们通过管道传递给grep awk join cut 这些小工具，作进一步的操作，最后将结果重定向到一个文件中保存。find awk grep这几个东西很强大我们后面会记录他的详细用法。\n# join的用法\njoin 普通文件关联\n首先看下join的文档\n```\njoin --help\nUsage: join [OPTION]... FILE1 FILE2\nFor each pair of input lines with identical join fields, write a line to\nstandard output.  The default join field is the first, delimited\nby whitespace.  When FILE1 or FILE2 (not both) is -, read standard input.\n\n  -a FILENUM        also print unpairable lines from file FILENUM, where\n                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2\n  -e EMPTY          replace missing input fields with EMPTY\n  -i, --ignore-case  ignore differences in case when comparing fields\n  -j FIELD          equivalent to '-1 FIELD -2 FIELD'\n  -o FORMAT         obey FORMAT while constructing output line\n  -t CHAR           use CHAR as input and output field separator\n  -v FILENUM        like -a FILENUM, but suppress joined output lines\n  -1 FIELD          join on this FIELD of file 1\n  -2 FIELD          join on this FIELD of file 2\n  --check-order     check that the input is correctly sorted, even\n                      if all input lines are pairable\n  --nocheck-order   do not check that the input is correctly sorted\n  --header          treat the first line in each file as field headers,\n                      print them without trying to pair them\n      --help     display this help and exit\n      --version  output version information and exit\n```\n上面这个 -1 -2 可以指定以那个字段为KEY来关联，这个也可以用-j来指定\n比如我们有两个文件a.txt,b.txt\na.txt           \n1 22            \n2 33            \n3 44            \n\n\n b.txt\n 1   a\n 2   b\n 3   c\n\n\n我们将两个文件关联到一起只需要一下操作\n```\njoin  a.txt b.txt\n\n1 22 a\n2 33 b\n3 44 c\n```\n按列关联在一起哪个文件在前面那个列就在前面\n\n# paste 合并\n\n比如我们有上面两个文件用paste来合并结果如下\n```\npaste a.txt b.txt\n\n1 22     1   a\n2 33     2   b\n3 44     3   c\n```\npaste也可以通过-s将文件按行来合并\n```\npaste -s a.txt  b.txt \n1 22    2 33    3 44\n1 a     2 b     3 c\n```\npaste-选项可以格式化输出内容，即对每一个（-），从标准输入中读一次数据。\njoin和paste都有其他参数比如下面会将两个文件以冒号分连接在一起：\n\n```\npaste -d: a.txt b.txt\n\n1 22:1   a\n2 33:2   b\n3 44:3   c\n```\n\n# cut 切分\n```\ncut -d\" \" -f 1 a.txt \n1 \n2 \n3 \n```\nf可以指定输出切分的字段，d可以指定字段分隔符\n# sort 排序\nsort 可以对文件中的记录按照一定的规则排序\nc.txt\n1\n3\n5\n7\n11\n2\n4\n6\n10\n8\n9\n```\nsort c.txt \n1\n10\n11\n2\n3\n4\n5\n6\n7\n8\n9\n```\n以字母序排列\n```\nsort -n c.txt \n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n```\n按照数字顺序进行排序，sort默认的是生序排列通过 r选项可以逆序排列。\n其他选项如:\n-k可以指定排序的字段，\n-t可以指定字段分割符。\n-f会将小写字母都转换为大写字母来进行比较，亦即忽略大小写\n-c会检查文件是否已排好序，如果乱序，则输出第一个乱序的行的相关信息，最后返回1\n-C会检查文件是否已排好序，如果乱序，不输出内容，仅返回1\n-M会以月份来排序，比如JAN小于FEB等等\n-b会忽略每一行前面的所有空白部分，从第一个可见字符开始比较。\n\nuniq 可以去掉文件中重复的列 其实sort的u选项也可以完成同样的操作.\n# split 和 dd 切分文件\nsplit可以将大文件切割成小文件,但是使用起来不是很方便个人用的少不展开说了。\n\ndd 也可以完成切割我个人觉得他更优雅一些,下面是我对自己在打包docker镜像时的分割操作，当时是由于网站上传文件的大小限制太大了不能上传，所以用dd将其且分成小文件。\n```\n#dd if=ubunt.tar bs=1024 count=97000 skip=0  of=ubuntu.tar.1\n#dd if=ubunt.tar bs=1024 count=97000 skip=97000  of=ubuntu.tar.2\n#cat ubuntu.tar.1 ubuntu.tar.2 > ubuntu.tar\ndd if=f21.tar bs=1024 count=97000 skip=0  of=fedora.tar.1\ndd if=f21.tar bs=1024 count=97000 skip=97000  of=fedora.tar.2\ndd if=f21.tar bs=1024 count=97000 skip=194000  of=fedora.tar.3\ndd if=mysql.tar bs=1024 count=97000 skip=0  of=mysql.tar.1\ndd if=mysql.tar bs=1024 count=97000 skip=97000  of=mysql.tar.2\ndd if=mysql.tar bs=1024 count=97000 skip=194000  of=mysql.tar.\n```\n其中bs表示写出块的大小，count表示写出块的数量，skip表示跳过多少个块，of表示输出文件，if表示输入文件.\n这几个工具有很多种用法，恰当的使用可以提高效率。\n","slug":"test","published":1,"updated":"2017-02-24T17:56:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj02ldepw000caatumrzc7yyb","content":"<p>工作中几乎每天都需要使用linux，刚开始接触linux觉得很高大上，适合装逼用，后面用着用着发现这东西不仅可以装逼还可以提高工作效率，开源界的各路高手为linux/unix写了非常多实用的小工具，这些工具配合起来使用可以极大的提升我们工作效率，今天主要记录一下join，cut,sort,paste,uniq,split 这几个小工具。<br><a id=\"more\"></a><br>首先跟大家说一下，linux下很多工作归根结底都是对文本的操作，比如我们要找到所有的文本文件，然后找到特定的内容保存。首先查找文本文件用到的是find,通过find我们可以找到很多路径，这些路径我们通过管道传递给grep awk join cut 这些小工具，作进一步的操作，最后将结果重定向到一个文件中保存。find awk grep这几个东西很强大我们后面会记录他的详细用法。</p>\n<h1 id=\"join的用法\"><a href=\"#join的用法\" class=\"headerlink\" title=\"join的用法\"></a>join的用法</h1><p>join 普通文件关联<br>首先看下join的文档<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">join --help</div><div class=\"line\">Usage: join [OPTION]... FILE1 FILE2</div><div class=\"line\">For each pair of input lines with identical join fields, write a line to</div><div class=\"line\">standard output.  The default join field is the first, delimited</div><div class=\"line\">by whitespace.  When FILE1 or FILE2 (not both) is -, read standard input.</div><div class=\"line\"></div><div class=\"line\">  -a FILENUM        also print unpairable lines from file FILENUM, where</div><div class=\"line\">                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2</div><div class=\"line\">  -e EMPTY          replace missing input fields with EMPTY</div><div class=\"line\">  -i, --ignore-case  ignore differences in case when comparing fields</div><div class=\"line\">  -j FIELD          equivalent to &apos;-1 FIELD -2 FIELD&apos;</div><div class=\"line\">  -o FORMAT         obey FORMAT while constructing output line</div><div class=\"line\">  -t CHAR           use CHAR as input and output field separator</div><div class=\"line\">  -v FILENUM        like -a FILENUM, but suppress joined output lines</div><div class=\"line\">  -1 FIELD          join on this FIELD of file 1</div><div class=\"line\">  -2 FIELD          join on this FIELD of file 2</div><div class=\"line\">  --check-order     check that the input is correctly sorted, even</div><div class=\"line\">                      if all input lines are pairable</div><div class=\"line\">  --nocheck-order   do not check that the input is correctly sorted</div><div class=\"line\">  --header          treat the first line in each file as field headers,</div><div class=\"line\">                      print them without trying to pair them</div><div class=\"line\">      --help     display this help and exit</div><div class=\"line\">      --version  output version information and exit</div></pre></td></tr></table></figure></p>\n<p>上面这个 -1 -2 可以指定以那个字段为KEY来关联，这个也可以用-j来指定<br>比如我们有两个文件a.txt,b.txt<br>a.txt<br>1 22<br>2 33<br>3 44            </p>\n<p> b.txt<br> 1   a<br> 2   b<br> 3   c</p>\n<p>我们将两个文件关联到一起只需要一下操作<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">join  a.txt b.txt</div><div class=\"line\"></div><div class=\"line\">1 22 a</div><div class=\"line\">2 33 b</div><div class=\"line\">3 44 c</div></pre></td></tr></table></figure></p>\n<p>按列关联在一起哪个文件在前面那个列就在前面</p>\n<h1 id=\"paste-合并\"><a href=\"#paste-合并\" class=\"headerlink\" title=\"paste 合并\"></a>paste 合并</h1><p>比如我们有上面两个文件用paste来合并结果如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">paste a.txt b.txt</div><div class=\"line\"></div><div class=\"line\">1 22     1   a</div><div class=\"line\">2 33     2   b</div><div class=\"line\">3 44     3   c</div></pre></td></tr></table></figure></p>\n<p>paste也可以通过-s将文件按行来合并<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">paste -s a.txt  b.txt </div><div class=\"line\">1 22    2 33    3 44</div><div class=\"line\">1 a     2 b     3 c</div></pre></td></tr></table></figure></p>\n<p>paste-选项可以格式化输出内容，即对每一个（-），从标准输入中读一次数据。<br>join和paste都有其他参数比如下面会将两个文件以冒号分连接在一起：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">paste -d: a.txt b.txt</div><div class=\"line\"></div><div class=\"line\">1 22:1   a</div><div class=\"line\">2 33:2   b</div><div class=\"line\">3 44:3   c</div></pre></td></tr></table></figure>\n<h1 id=\"cut-切分\"><a href=\"#cut-切分\" class=\"headerlink\" title=\"cut 切分\"></a>cut 切分</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cut -d&quot; &quot; -f 1 a.txt </div><div class=\"line\">1 </div><div class=\"line\">2 </div><div class=\"line\">3</div></pre></td></tr></table></figure>\n<p>f可以指定输出切分的字段，d可以指定字段分隔符</p>\n<h1 id=\"sort-排序\"><a href=\"#sort-排序\" class=\"headerlink\" title=\"sort 排序\"></a>sort 排序</h1><p>sort 可以对文件中的记录按照一定的规则排序<br>c.txt<br>1<br>3<br>5<br>7<br>11<br>2<br>4<br>6<br>10<br>8<br>9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">sort c.txt </div><div class=\"line\">1</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td></tr></table></figure></p>\n<p>以字母序排列<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">sort -n c.txt </div><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td></tr></table></figure></p>\n<p>按照数字顺序进行排序，sort默认的是生序排列通过 r选项可以逆序排列。<br>其他选项如:<br>-k可以指定排序的字段，<br>-t可以指定字段分割符。<br>-f会将小写字母都转换为大写字母来进行比较，亦即忽略大小写<br>-c会检查文件是否已排好序，如果乱序，则输出第一个乱序的行的相关信息，最后返回1<br>-C会检查文件是否已排好序，如果乱序，不输出内容，仅返回1<br>-M会以月份来排序，比如JAN小于FEB等等<br>-b会忽略每一行前面的所有空白部分，从第一个可见字符开始比较。</p>\n<p>uniq 可以去掉文件中重复的列 其实sort的u选项也可以完成同样的操作.</p>\n<h1 id=\"split-和-dd-切分文件\"><a href=\"#split-和-dd-切分文件\" class=\"headerlink\" title=\"split 和 dd 切分文件\"></a>split 和 dd 切分文件</h1><p>split可以将大文件切割成小文件,但是使用起来不是很方便个人用的少不展开说了。</p>\n<p>dd 也可以完成切割我个人觉得他更优雅一些,下面是我对自己在打包docker镜像时的分割操作，当时是由于网站上传文件的大小限制太大了不能上传，所以用dd将其且分成小文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">#dd if=ubunt.tar bs=1024 count=97000 skip=0  of=ubuntu.tar.1</div><div class=\"line\">#dd if=ubunt.tar bs=1024 count=97000 skip=97000  of=ubuntu.tar.2</div><div class=\"line\">#cat ubuntu.tar.1 ubuntu.tar.2 &gt; ubuntu.tar</div><div class=\"line\">dd if=f21.tar bs=1024 count=97000 skip=0  of=fedora.tar.1</div><div class=\"line\">dd if=f21.tar bs=1024 count=97000 skip=97000  of=fedora.tar.2</div><div class=\"line\">dd if=f21.tar bs=1024 count=97000 skip=194000  of=fedora.tar.3</div><div class=\"line\">dd if=mysql.tar bs=1024 count=97000 skip=0  of=mysql.tar.1</div><div class=\"line\">dd if=mysql.tar bs=1024 count=97000 skip=97000  of=mysql.tar.2</div><div class=\"line\">dd if=mysql.tar bs=1024 count=97000 skip=194000  of=mysql.tar.</div></pre></td></tr></table></figure></p>\n<p>其中bs表示写出块的大小，count表示写出块的数量，skip表示跳过多少个块，of表示输出文件，if表示输入文件.<br>这几个工具有很多种用法，恰当的使用可以提高效率。</p>\n","excerpt":"<p>工作中几乎每天都需要使用linux，刚开始接触linux觉得很高大上，适合装逼用，后面用着用着发现这东西不仅可以装逼还可以提高工作效率，开源界的各路高手为linux/unix写了非常多实用的小工具，这些工具配合起来使用可以极大的提升我们工作效率，今天主要记录一下join，cut,sort,paste,uniq,split 这几个小工具。<br>","more":"<br>首先跟大家说一下，linux下很多工作归根结底都是对文本的操作，比如我们要找到所有的文本文件，然后找到特定的内容保存。首先查找文本文件用到的是find,通过find我们可以找到很多路径，这些路径我们通过管道传递给grep awk join cut 这些小工具，作进一步的操作，最后将结果重定向到一个文件中保存。find awk grep这几个东西很强大我们后面会记录他的详细用法。</p>\n<h1 id=\"join的用法\"><a href=\"#join的用法\" class=\"headerlink\" title=\"join的用法\"></a>join的用法</h1><p>join 普通文件关联<br>首先看下join的文档<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">join --help</div><div class=\"line\">Usage: join [OPTION]... FILE1 FILE2</div><div class=\"line\">For each pair of input lines with identical join fields, write a line to</div><div class=\"line\">standard output.  The default join field is the first, delimited</div><div class=\"line\">by whitespace.  When FILE1 or FILE2 (not both) is -, read standard input.</div><div class=\"line\"></div><div class=\"line\">  -a FILENUM        also print unpairable lines from file FILENUM, where</div><div class=\"line\">                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2</div><div class=\"line\">  -e EMPTY          replace missing input fields with EMPTY</div><div class=\"line\">  -i, --ignore-case  ignore differences in case when comparing fields</div><div class=\"line\">  -j FIELD          equivalent to &apos;-1 FIELD -2 FIELD&apos;</div><div class=\"line\">  -o FORMAT         obey FORMAT while constructing output line</div><div class=\"line\">  -t CHAR           use CHAR as input and output field separator</div><div class=\"line\">  -v FILENUM        like -a FILENUM, but suppress joined output lines</div><div class=\"line\">  -1 FIELD          join on this FIELD of file 1</div><div class=\"line\">  -2 FIELD          join on this FIELD of file 2</div><div class=\"line\">  --check-order     check that the input is correctly sorted, even</div><div class=\"line\">                      if all input lines are pairable</div><div class=\"line\">  --nocheck-order   do not check that the input is correctly sorted</div><div class=\"line\">  --header          treat the first line in each file as field headers,</div><div class=\"line\">                      print them without trying to pair them</div><div class=\"line\">      --help     display this help and exit</div><div class=\"line\">      --version  output version information and exit</div></pre></td></tr></table></figure></p>\n<p>上面这个 -1 -2 可以指定以那个字段为KEY来关联，这个也可以用-j来指定<br>比如我们有两个文件a.txt,b.txt<br>a.txt<br>1 22<br>2 33<br>3 44            </p>\n<p> b.txt<br> 1   a<br> 2   b<br> 3   c</p>\n<p>我们将两个文件关联到一起只需要一下操作<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">join  a.txt b.txt</div><div class=\"line\"></div><div class=\"line\">1 22 a</div><div class=\"line\">2 33 b</div><div class=\"line\">3 44 c</div></pre></td></tr></table></figure></p>\n<p>按列关联在一起哪个文件在前面那个列就在前面</p>\n<h1 id=\"paste-合并\"><a href=\"#paste-合并\" class=\"headerlink\" title=\"paste 合并\"></a>paste 合并</h1><p>比如我们有上面两个文件用paste来合并结果如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">paste a.txt b.txt</div><div class=\"line\"></div><div class=\"line\">1 22     1   a</div><div class=\"line\">2 33     2   b</div><div class=\"line\">3 44     3   c</div></pre></td></tr></table></figure></p>\n<p>paste也可以通过-s将文件按行来合并<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">paste -s a.txt  b.txt </div><div class=\"line\">1 22    2 33    3 44</div><div class=\"line\">1 a     2 b     3 c</div></pre></td></tr></table></figure></p>\n<p>paste-选项可以格式化输出内容，即对每一个（-），从标准输入中读一次数据。<br>join和paste都有其他参数比如下面会将两个文件以冒号分连接在一起：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">paste -d: a.txt b.txt</div><div class=\"line\"></div><div class=\"line\">1 22:1   a</div><div class=\"line\">2 33:2   b</div><div class=\"line\">3 44:3   c</div></pre></td></tr></table></figure>\n<h1 id=\"cut-切分\"><a href=\"#cut-切分\" class=\"headerlink\" title=\"cut 切分\"></a>cut 切分</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cut -d&quot; &quot; -f 1 a.txt </div><div class=\"line\">1 </div><div class=\"line\">2 </div><div class=\"line\">3</div></pre></td></tr></table></figure>\n<p>f可以指定输出切分的字段，d可以指定字段分隔符</p>\n<h1 id=\"sort-排序\"><a href=\"#sort-排序\" class=\"headerlink\" title=\"sort 排序\"></a>sort 排序</h1><p>sort 可以对文件中的记录按照一定的规则排序<br>c.txt<br>1<br>3<br>5<br>7<br>11<br>2<br>4<br>6<br>10<br>8<br>9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">sort c.txt </div><div class=\"line\">1</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td></tr></table></figure></p>\n<p>以字母序排列<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">sort -n c.txt </div><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td></tr></table></figure></p>\n<p>按照数字顺序进行排序，sort默认的是生序排列通过 r选项可以逆序排列。<br>其他选项如:<br>-k可以指定排序的字段，<br>-t可以指定字段分割符。<br>-f会将小写字母都转换为大写字母来进行比较，亦即忽略大小写<br>-c会检查文件是否已排好序，如果乱序，则输出第一个乱序的行的相关信息，最后返回1<br>-C会检查文件是否已排好序，如果乱序，不输出内容，仅返回1<br>-M会以月份来排序，比如JAN小于FEB等等<br>-b会忽略每一行前面的所有空白部分，从第一个可见字符开始比较。</p>\n<p>uniq 可以去掉文件中重复的列 其实sort的u选项也可以完成同样的操作.</p>\n<h1 id=\"split-和-dd-切分文件\"><a href=\"#split-和-dd-切分文件\" class=\"headerlink\" title=\"split 和 dd 切分文件\"></a>split 和 dd 切分文件</h1><p>split可以将大文件切割成小文件,但是使用起来不是很方便个人用的少不展开说了。</p>\n<p>dd 也可以完成切割我个人觉得他更优雅一些,下面是我对自己在打包docker镜像时的分割操作，当时是由于网站上传文件的大小限制太大了不能上传，所以用dd将其且分成小文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">#dd if=ubunt.tar bs=1024 count=97000 skip=0  of=ubuntu.tar.1</div><div class=\"line\">#dd if=ubunt.tar bs=1024 count=97000 skip=97000  of=ubuntu.tar.2</div><div class=\"line\">#cat ubuntu.tar.1 ubuntu.tar.2 &gt; ubuntu.tar</div><div class=\"line\">dd if=f21.tar bs=1024 count=97000 skip=0  of=fedora.tar.1</div><div class=\"line\">dd if=f21.tar bs=1024 count=97000 skip=97000  of=fedora.tar.2</div><div class=\"line\">dd if=f21.tar bs=1024 count=97000 skip=194000  of=fedora.tar.3</div><div class=\"line\">dd if=mysql.tar bs=1024 count=97000 skip=0  of=mysql.tar.1</div><div class=\"line\">dd if=mysql.tar bs=1024 count=97000 skip=97000  of=mysql.tar.2</div><div class=\"line\">dd if=mysql.tar bs=1024 count=97000 skip=194000  of=mysql.tar.</div></pre></td></tr></table></figure></p>\n<p>其中bs表示写出块的大小，count表示写出块的数量，skip表示跳过多少个块，of表示输出文件，if表示输入文件.<br>这几个工具有很多种用法，恰当的使用可以提高效率。</p>"},{"title":"聪明人都使用方格子笔记本","date":"2017-03-09T15:57:54.000Z","_content":"很久没有静下心来读一本书了，上次读书还是在三个月前吧，今天看到论坛上经典书籍推荐确实是爱不释手，又觉得惭愧内疚，人总是需要学写进步的，我堕落了太久幸好今天看到了这个帖子，决定开始阅读，厚积薄发慢慢积累，今天主要读了聪明人都使用方格子，读完之后发现自己堕落了太多，基本上退化为低等生命了，因为我们基本上已经失去了思考的能力。\n<!-- more -->\n这本书根据读者处于不同的年龄和不同的社会角色进行了分析，方格子笔记本确实有很多的方便地方，关键还在于我们懂不懂得去做笔记和学习，我觉得我自己这方面是没有做位的，所以我需要加强这方面的能力培养，这是一个好的习惯，我们笔记不但要记录东西还要思考分析，更要总结行动，不然所谓笔记只是浪费时间浪费资源没有任何益处。\n在此之前我的思维有些被固化了，我的笔记单调无聊，毫无乐趣可言，基本都是文字，格式完全是不拘一格，没有黄金三分之说，当自己偶尔翻出笔记时也能回想起来很多，但是效率相对方格子笔记本还是会低许多。\n我要打开思路，不断的学习，慢慢提升自己。也许记个好的笔记就是个好的开始。\n","source":"_posts/cleverboysusegoodnotebook.md","raw":"---\ntitle: 聪明人都使用方格子笔记本\ndate: 2017-03-09 23:57:54\ntag: 阅读\n---\n很久没有静下心来读一本书了，上次读书还是在三个月前吧，今天看到论坛上经典书籍推荐确实是爱不释手，又觉得惭愧内疚，人总是需要学写进步的，我堕落了太久幸好今天看到了这个帖子，决定开始阅读，厚积薄发慢慢积累，今天主要读了聪明人都使用方格子，读完之后发现自己堕落了太多，基本上退化为低等生命了，因为我们基本上已经失去了思考的能力。\n<!-- more -->\n这本书根据读者处于不同的年龄和不同的社会角色进行了分析，方格子笔记本确实有很多的方便地方，关键还在于我们懂不懂得去做笔记和学习，我觉得我自己这方面是没有做位的，所以我需要加强这方面的能力培养，这是一个好的习惯，我们笔记不但要记录东西还要思考分析，更要总结行动，不然所谓笔记只是浪费时间浪费资源没有任何益处。\n在此之前我的思维有些被固化了，我的笔记单调无聊，毫无乐趣可言，基本都是文字，格式完全是不拘一格，没有黄金三分之说，当自己偶尔翻出笔记时也能回想起来很多，但是效率相对方格子笔记本还是会低许多。\n我要打开思路，不断的学习，慢慢提升自己。也许记个好的笔记就是个好的开始。\n","slug":"cleverboysusegoodnotebook","published":1,"updated":"2017-03-09T16:18:49.000Z","_id":"cj02lj5zo0000zytu4bplhv3d","comments":1,"layout":"post","photos":[],"link":"","content":"<p>很久没有静下心来读一本书了，上次读书还是在三个月前吧，今天看到论坛上经典书籍推荐确实是爱不释手，又觉得惭愧内疚，人总是需要学写进步的，我堕落了太久幸好今天看到了这个帖子，决定开始阅读，厚积薄发慢慢积累，今天主要读了聪明人都使用方格子，读完之后发现自己堕落了太多，基本上退化为低等生命了，因为我们基本上已经失去了思考的能力。<br><a id=\"more\"></a><br>这本书根据读者处于不同的年龄和不同的社会角色进行了分析，方格子笔记本确实有很多的方便地方，关键还在于我们懂不懂得去做笔记和学习，我觉得我自己这方面是没有做位的，所以我需要加强这方面的能力培养，这是一个好的习惯，我们笔记不但要记录东西还要思考分析，更要总结行动，不然所谓笔记只是浪费时间浪费资源没有任何益处。<br>在此之前我的思维有些被固化了，我的笔记单调无聊，毫无乐趣可言，基本都是文字，格式完全是不拘一格，没有黄金三分之说，当自己偶尔翻出笔记时也能回想起来很多，但是效率相对方格子笔记本还是会低许多。<br>我要打开思路，不断的学习，慢慢提升自己。也许记个好的笔记就是个好的开始。</p>\n","excerpt":"<p>很久没有静下心来读一本书了，上次读书还是在三个月前吧，今天看到论坛上经典书籍推荐确实是爱不释手，又觉得惭愧内疚，人总是需要学写进步的，我堕落了太久幸好今天看到了这个帖子，决定开始阅读，厚积薄发慢慢积累，今天主要读了聪明人都使用方格子，读完之后发现自己堕落了太多，基本上退化为低等生命了，因为我们基本上已经失去了思考的能力。<br>","more":"<br>这本书根据读者处于不同的年龄和不同的社会角色进行了分析，方格子笔记本确实有很多的方便地方，关键还在于我们懂不懂得去做笔记和学习，我觉得我自己这方面是没有做位的，所以我需要加强这方面的能力培养，这是一个好的习惯，我们笔记不但要记录东西还要思考分析，更要总结行动，不然所谓笔记只是浪费时间浪费资源没有任何益处。<br>在此之前我的思维有些被固化了，我的笔记单调无聊，毫无乐趣可言，基本都是文字，格式完全是不拘一格，没有黄金三分之说，当自己偶尔翻出笔记时也能回想起来很多，但是效率相对方格子笔记本还是会低许多。<br>我要打开思路，不断的学习，慢慢提升自己。也许记个好的笔记就是个好的开始。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj02ldeo60000aatu8ocr26dh","tag_id":"cj02ldeox0001aatu1ntqwg8k","_id":"cj02ldep70002aatuy1cazgex"},{"post_id":"cj02ldep90003aatuumi899jj","tag_id":"cj02ldepf0004aatuv34z8q78","_id":"cj02ldeph0005aatu5ckkf1h6"},{"post_id":"cj02ldepj0006aatuzl5l4ssn","tag_id":"cj02ldepo0007aatuvdpudmnl","_id":"cj02ldepp0008aatuc0xoylnv"},{"post_id":"cj02ldepq0009aatugh38ggt0","tag_id":"cj02ldept000aaatumeuzpkrp","_id":"cj02ldepu000baatu0jkmydk4"},{"post_id":"cj02ldepw000caatumrzc7yyb","tag_id":"cj02ldeox0001aatu1ntqwg8k","_id":"cj02ldeq8000daatup929wqd4"},{"post_id":"cj02lj5zo0000zytu4bplhv3d","tag_id":"cj02ljpk1000029turpdccjs9","_id":"cj02ljpkd000129tuzy0jf3b1"}],"Tag":[{"name":"linux","_id":"cj02ldeox0001aatu1ntqwg8k"},{"name":"hexo","_id":"cj02ldepf0004aatuv34z8q78"},{"name":"spark","_id":"cj02ldepo0007aatuvdpudmnl"},{"name":"java","_id":"cj02ldept000aaatumeuzpkrp"},{"name":"阅读","_id":"cj02ljpk1000029turpdccjs9"}]}}